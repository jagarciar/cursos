"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[8441],{5360:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"reactjs/hooks/custom-hooks","title":"7. Custom hooks","description":"\xbfQu\xe9 son los custom hooks? \xbfEn qu\xe9 se diferencian con los hooks?","source":"@site/docs/reactjs/hooks/custom-hooks.md","sourceDirName":"reactjs/hooks","slug":"/reactjs/hooks/custom-hooks","permalink":"/cursos/docs/reactjs/hooks/custom-hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/reactjs/hooks/custom-hooks.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"useState","permalink":"/cursos/docs/tags/about-useState","description":"Tutoriales donde se menciona la palabra useState"},{"inline":false,"label":"useEffect","permalink":"/cursos/docs/tags/about-useEffect","description":"Tutoriales donde se menciona la palabra useEffect"},{"inline":false,"label":"useFetch","permalink":"/cursos/docs/tags/about-useFetch","description":"Tutoriales donde se menciona la palabra useFetch"},{"inline":false,"label":"hooks","permalink":"/cursos/docs/tags/about-hooks","description":"Tutoriales donde se menciona la palabra hooks"},{"inline":false,"label":"useForm","permalink":"/cursos/docs/tags/about-useForm","description":"Tutoriales donde se menciona la palabra useForm"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1745452800000,"sidebarPosition":7,"frontMatter":{"id":"custom-hooks","title":"7. Custom hooks","sidebar_position":7,"author":"jeogarod","description":"\xbfQu\xe9 son los custom hooks? \xbfEn qu\xe9 se diferencian con los hooks?","tags":["react","reactjs","npm","vite","useState","useEffect","useFetch","hooks","useForm"],"last_update":{"date":"04/24/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"6. useReducer","permalink":"/cursos/docs/reactjs/hooks/useReducer"},"next":{"title":"Frameworks","permalink":"/cursos/docs/category/frameworks"}}');var s=o(4848),t=o(8453);const a={id:"custom-hooks",title:"7. Custom hooks",sidebar_position:7,author:"jeogarod",description:"\xbfQu\xe9 son los custom hooks? \xbfEn qu\xe9 se diferencian con los hooks?",tags:["react","reactjs","npm","vite","useState","useEffect","useFetch","hooks","useForm"],last_update:{date:"04/24/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},l="7. Custom hooks",i={},c=[{value:"useCounter",id:"usecounter",level:2},{value:"useFetch",id:"usefetch",level:2},{value:"useLocalStorage",id:"uselocalstorage",level:2},{value:"useForm",id:"useform",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"7-custom-hooks",children:"7. Custom hooks"})}),"\n",(0,s.jsxs)(n.p,{children:["Un ",(0,s.jsx)(n.strong,{children:"Custom Hook"})," es una ",(0,s.jsx)(n.strong,{children:"funci\xf3n JavaScript"})," que utiliza otros ",(0,s.jsx)(n.strong,{children:"Hooks"})," de React para encapsular l\xf3gica de manera que pueda ser reutilizada en varios componentes. Estos hooks no son m\xe1s que una extensi\xf3n de los hooks est\xe1ndar de React, como useRef, ",(0,s.jsx)(n.a,{href:"/cursos/docs/reactjs/hooks/useState",children:"useState"})," o ",(0,s.jsx)(n.a,{href:"/cursos/docs/reactjs/hooks/useEffect",children:"useEffect"}),", permiti\xe9ndonos crear nuestra propia l\xf3gica que puede ser compartida y reutilizada en varios componentes. Es como un contenedor para la l\xf3gica de estado y efectos, permitiendo su reuso sin duplicar c\xf3digo."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["La ",(0,s.jsx)(n.strong,{children:"gesti\xf3n de estados"})," es uno de los casos de uso m\xe1s comunes para los ",(0,s.jsx)(n.strong,{children:"custom hooks"})," en React. Estos permiten crear ",(0,s.jsx)(n.strong,{children:"manejadores de estado"})," que son reutilizables entre diferentes componentes. Por ejemplo, un custom hook podr\xeda manejar la l\xf3gica de un formulario, almacenando y actualizando valores de los campos de manera eficiente. Esto resulta en un c\xf3digo m\xe1s limpio y modular, facilitando la mantenibilidad y escalabilidad de las aplicaciones."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Los ",(0,s.jsx)(n.strong,{children:"custom hooks"})," pueden encapsular la l\xf3gica para realizar peticiones ",(0,s.jsx)(n.strong,{children:"HTTP"}),", manejar respuestas y errores, y gestionar estados de carga. Esto simplifica enormemente los componentes que consumen datos de ",(0,s.jsx)(n.strong,{children:"APIs"}),", ya que toda la l\xf3gica de red y manejo de datos se abstrae en un hook reutilizable."]})}),"\n",(0,s.jsxs)(n.p,{children:["Para crear un ",(0,s.jsx)(n.strong,{children:"custom hook"})," en ",(0,s.jsx)(n.strong,{children:"React"}),", comenzamos definiendo una funci\xf3n que encapsula la l\xf3gica o estado que deseamos reutilizar. Es importante recordar que todos los ",(0,s.jsx)(n.strong,{children:"hooks"})," personalizados deben comenzar con ",(0,s.jsx)(n.strong,{children:"use"}),", por ejemplo, ",(0,s.jsx)(n.strong,{children:"useFetch"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Un ejemplo pr\xe1ctico podr\xeda ser un ",(0,s.jsx)(n.strong,{children:"hook"})," de estado que gestione un variable de estado. Este hook utilizar\xeda ",(0,s.jsx)(n.strong,{children:"useState"})," para almacenar y actualizar el valor del variable. Cada vez que necesitemos usar esta variable en nuestros componentes, podr\xedamos usar nuestro ",(0,s.jsx)(n.strong,{children:"custom hook"})," para manejar esta l\xf3gica de manera eficiente y reutilizable."]})}),"\n",(0,s.jsx)(n.h2,{id:"usecounter",children:"useCounter"}),"\n",(0,s.jsxs)(n.p,{children:["En el siguiente ejemplo creamos un ",(0,s.jsx)(n.strong,{children:"custom hook"})," nombrado ",(0,s.jsx)(n.strong,{children:"useCounter"})," en el archivo ",(0,s.jsx)(n.strong,{children:"/src/useCounter.js"}),". El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCounter"})," recibe un par\xe1metro nombrado ",(0,s.jsx)(n.strong,{children:"valorInicial"})," y tiene una variable de estado nombrada ",(0,s.jsx)(n.strong,{children:"contador"})," con su respectiva funci\xf3n ",(0,s.jsx)(n.strong,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"setContador"}),". Adicionalmente el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCounter"})," defini\xf3 dos funciones : ",(0,s.jsx)(n.strong,{children:"incrementar"})," y ",(0,s.jsx)(n.strong,{children:"decrementar"}),". La funci\xf3n ",(0,s.jsx)(n.strong,{children:"incrementar"})," recibe un par\xe1metro ",(0,s.jsx)(n.strong,{children:"valorIncremento"})," y su objetivo es incrementar el valor de la variable de estado ",(0,s.jsx)(n.strong,{children:"contador"}),". La funci\xf3n ",(0,s.jsx)(n.strong,{children:"decrementar"})," recibe un par\xe1metro ",(0,s.jsx)(n.strong,{children:"valorDecremento"})," y su objetivo es reducir el valor de la variable ",(0,s.jsx)(n.strong,{children:"contador"})," (teniendo en cuenta que el valor de la variable ",(0,s.jsx)(n.strong,{children:"contador"})," no puede ser menor que 0)."]}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCouter"})," no retorna un elemento ",(0,s.jsx)(n.strong,{children:"HTML"}),", por el contrario retorna la variable de estado ",(0,s.jsx)(n.strong,{children:"contador"})," y las funciones ",(0,s.jsx)(n.strong,{children:"incrementar"})," y ",(0,s.jsx)(n.strong,{children:"decrementar"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/useCounter.js"',children:'import { useState } from "react"\n\nexport const useCounter = (valorInicial = 0) =>{\n\n    const [contador, setContador] = useState(valorInicial)\n\n    const incrementar = (valorIncremento) =>{ \n        setContador(contador + Number(valorIncremento))\n    }\n\n    const decrementar = (valorDecremento) =>{ \n        if(Number(valorDecremento) > contador)\n            setContador(0)\n        else\n            setContador(contador - Number(valorDecremento))\n    }\n\n    return [\n        contador, \n        incrementar, \n        decrementar\n    ]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCounter"})," ser\xe1 importado desde el componente funcional ",(0,s.jsx)(n.strong,{children:"CounterApp"}),". Por tal motivo el componente ",(0,s.jsx)(n.strong,{children:"CounterApp"})," debe definir el retorno del ",(0,s.jsx)(n.strong,{children:"hook"})," y la invocaci\xf3n del mismo. Adicionalmente, el componente ",(0,s.jsx)(n.strong,{children:"CounterApp"})," tiene una variable de estado ",(0,s.jsx)(n.strong,{children:"valor"})," con su respectiva funci\xf3n ",(0,s.jsx)(n.strong,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"setValor"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["El componente ",(0,s.jsx)(n.strong,{children:"CounterApp"})," retorna en un elemento ",(0,s.jsx)(n.strong,{children:"HTML"})," un caja de texto que al cambiar su valor modifica el valor de la variable de estado ",(0,s.jsx)(n.strong,{children:"valor"}),". El valor de la variable de estado ",(0,s.jsx)(n.strong,{children:"valor"})," ser\xe1 enviado como par\xe1metro a las funciones ",(0,s.jsx)(n.strong,{children:"incrementar"})," y ",(0,s.jsx)(n.strong,{children:"decrementar"})," que son exportadas desde el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCounter"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/CounterApp.jsx"',children:'import React, { useState } from \'react\'\nimport { useCounter } from \'./useCounter\';\n\nexport const CounterApp = () => {\n\n  const [contador, incrementar, decrementar] = useCounter(0);\n  const [valor, setValor] = useState(0)\n\n  const handleChange = (event) => {\n    setValor(event.target.value)\n  }\n\n  return (\n    <>\n        <label htmlFor="valor">Valor : </label>\n       <input id="valor" type="number" value={valor} onChange={handleChange}/>\n       <p>{contador}</p>\n       <button onClick={() => incrementar(valor)}>Incrementar</button>\n       <button onClick={() => decrementar(valor)}>Decrementar</button>  \n    </>\n  )\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"usefetch",children:"useFetch"}),"\n",(0,s.jsxs)(n.p,{children:["En el siguiente ejemplo creamos un ",(0,s.jsx)(n.strong,{children:"custom hook"})," nombrado ",(0,s.jsx)(n.strong,{children:"useFetch"})," en el archivo ",(0,s.jsx)(n.strong,{children:"/src/FetchHook.jsx"}),". El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"})," recibe un par\xe1metro nombrado ",(0,s.jsx)(n.strong,{children:"url"})," y tiene tres variables de estado : ",(0,s.jsx)(n.strong,{children:"data"}),", ",(0,s.jsx)(n.strong,{children:"loading"})," y ",(0,s.jsx)(n.strong,{children:"error"}),". Por cada variable de estado, el ",(0,s.jsx)(n.strong,{children:"hook"})," define tres funciones : ",(0,s.jsx)(n.strong,{children:"setData"}),", ",(0,s.jsx)(n.strong,{children:"setLoading"})," y ",(0,s.jsx)(n.strong,{children:"setError"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"})," no retorna un elemento ",(0,s.jsx)(n.strong,{children:"HTML"}),", por el contrario retorna las variables de estado ",(0,s.jsx)(n.strong,{children:"data"}),", ",(0,s.jsx)(n.strong,{children:"loading"})," y ",(0,s.jsx)(n.strong,{children:"error"}),". Adicionalmente, el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"})," defini\xf3 un ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useEffect"})," que invoca o consume una ",(0,s.jsx)(n.strong,{children:"API REST"})," a trav\xe9s de ",(0,s.jsx)(n.strong,{children:"fetch"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/FetchHook.jsx"',children:"import { useState, useEffect } from 'react';\n\nexport const useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, loading, error };\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["No debes llamar a ",(0,s.jsx)(n.strong,{children:"Hooks"})," como ",(0,s.jsx)(n.a,{href:"/cursos/docs/reactjs/hooks/useState",children:"useState"})," o ",(0,s.jsx)(n.a,{href:"/cursos/docs/reactjs/hooks/useEffect",children:"useEffect"})," condicionalmente o dentro de ciclos o funciones anidadas. Siempre deben ser utilizados en el nivel superior de tu componente o ",(0,s.jsx)(n.strong,{children:"Hook personalizado"}),". Esto asegura que los Hooks se ejecuten en el mismo orden cada vez que tu componente se renderiza, lo cual es crucial para el correcto funcionamiento de React."]})}),"\n",(0,s.jsxs)(n.p,{children:["Finalmente solo necesitamos reutilizar el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"})," en alg\xfan componente que lo requiera:"]}),"\n",(0,s.jsxs)(n.p,{children:["En el archivo ",(0,s.jsx)(n.strong,{children:"/src/PokemonApp.jsx"})," se creo el componente ",(0,s.jsx)(n.strong,{children:"Pokemon"})," el cu\xe1l hace uso del ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"}),". El ",(0,s.jsx)(n.strong,{children:"hook"})," recibe la ",(0,s.jsx)(n.strong,{children:"url"})," o ",(0,s.jsx)(n.strong,{children:"endpoint"})," de la API REST que consumir\xe1 o invocar\xe1 y retorna una bandera que determina si a\xfan est\xe1 siendo consumida la API, una bandera que determina si se gener\xf3 un error y/o los datos obtenidos en la respuesta."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/PokemonApp.jsx"',children:"import React from 'react'\nimport {useFetch} from './FetchHook'\n\nexport const Pokemon = () => {\n\n    const {data, loading, error} = useFetch('https://pokeapi.co/api/v2/type/3');\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n    return (\n        <div>\n            <h1>Data:</h1>\n            <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n    );\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["En dado caso el ",(0,s.jsx)(n.strong,{children:"m\xe9todo HTTP"})," de la ",(0,s.jsx)(n.strong,{children:"API REST"})," no sea ",(0,s.jsx)(n.strong,{children:"GET"})," es necesario crear una variable ",(0,s.jsx)(n.strong,{children:"options"})," que debe ser enviada a la funci\xf3n ",(0,s.jsx)(n.strong,{children:"fetch"}),"."]})}),"\n",(0,s.jsxs)(n.p,{children:["En el siguiente ejemplo, nuestro ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"})," recibe tres par\xe1metros : ",(0,s.jsx)(n.strong,{children:"url"}),", ",(0,s.jsx)(n.strong,{children:"method"})," y ",(0,s.jsx)(n.strong,{children:"bodyData"}),". El par\xe1metro ",(0,s.jsx)(n.strong,{children:"url"})," representa el endpoint de la ",(0,s.jsx)(n.strong,{children:"API REST"}),". El par\xe1metro ",(0,s.jsx)(n.strong,{children:"method"})," representa el ",(0,s.jsx)(n.strong,{children:"m\xe9todo HTTP"})," (",(0,s.jsx)(n.strong,{children:"GET"}),", ",(0,s.jsx)(n.strong,{children:"POST"}),", ",(0,s.jsx)(n.strong,{children:"PUT"}),", ",(0,s.jsx)(n.strong,{children:"DELETE"}),"). El par\xe1metro ",(0,s.jsx)(n.strong,{children:"bodyData"})," representa el contenido que debe ser enviado \xfanica y opcionalmente en una petici\xf3n ",(0,s.jsx)(n.strong,{children:"POST"})," o ",(0,s.jsx)(n.strong,{children:"PUT"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useFetch"})," defini\xf3 en un ",(0,s.jsx)(n.strong,{children:"useEffect"})," el llamado a la ",(0,s.jsx)(n.strong,{children:"API REST"}),". En el llamado a la funci\xf3n ",(0,s.jsx)(n.strong,{children:"fetch"})," se env\xeda la ",(0,s.jsx)(n.strong,{children:"url"})," y un objeto nombrado ",(0,s.jsx)(n.strong,{children:"options"}),". El objeto ",(0,s.jsx)(n.strong,{children:"options"})," tiene tres propiedades : ",(0,s.jsx)(n.strong,{children:"method"}),", ",(0,s.jsx)(n.strong,{children:"headers"})," y ",(0,s.jsx)(n.strong,{children:"body"}),". En la propiedad ",(0,s.jsx)(n.strong,{children:"method"})," se almacenar\xe1 el ",(0,s.jsx)(n.strong,{children:"m\xe9todo HTTP"}),". En la propiedad ",(0,s.jsx)(n.strong,{children:"headers"})," se incluir\xe1 el atributo ",(0,s.jsx)(n.strong,{children:"Content-type"})," para definir que la petici\xf3n y la respuesta ser\xe1n bajo ",(0,s.jsx)(n.strong,{children:"JSON"}),". En la propiedad ",(0,s.jsx)(n.strong,{children:"body"})," se almacenar\xe1 el valor de la variable ",(0,s.jsx)(n.strong,{children:"bodyData"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/FetchHook.jsx"',children:"import { useState, useEffect } from 'react';\n\nexport const useFetch = (url, method, bodyData = null) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const options = {\n          method: method,\n          headers:{\n            'Content-type':'application/json; charset=UTF-8'\n          },\n          body: method == 'GET' || method == 'DELETE' ? null : JSON.stringify(bodyData)\n        }\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, loading, error };\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uselocalstorage",children:"useLocalStorage"}),"\n",(0,s.jsxs)(n.p,{children:["Otro de los hooks que uso frecuentemente es uno que facilita la manipulaci\xf3n del ",(0,s.jsx)(n.strong,{children:"local storage"})," del navegador. A continuaci\xf3n podremos ver que se cre\xf3 el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useLocalStorage"})," el cu\xe1l recibe dos par\xe1metros : ",(0,s.jsx)(n.strong,{children:"key"})," e ",(0,s.jsx)(n.strong,{children:"initialValue"}),". El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useLocalStorage"})," tiene una variable de estado : ",(0,s.jsx)(n.strong,{children:"storedValue"})," la cu\xe1l puede ser actualizada a trav\xe9s de la funci\xf3n ",(0,s.jsx)(n.strong,{children:"setStoredValue"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["En la definici\xf3n y uso del ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useState"})," se obtiene del ",(0,s.jsx)(n.strong,{children:"local storage"})," del navegador una llave. Si la encuentra, retorna el valor de esa llave, si no, retorna el valor inicial. Tanto la llave como el valor inicial representan los par\xe1metros del ",(0,s.jsx)(n.strong,{children:"hook"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Tambi\xe9n encontraremos que se implement\xf3 la funci\xf3n ",(0,s.jsx)(n.strong,{children:"setValue"})," la cu\xe1l actualiza el valor de la variable de estado ",(0,s.jsx)(n.strong,{children:"storedValue"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/LocalStorageHook.jsx"',children:"import { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Finalmente solo necesitamos reutilizar el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useLocalStorage"})," en alg\xfan componente que lo requiera:"]}),"\n",(0,s.jsxs)(n.p,{children:["En el archivo ",(0,s.jsx)(n.strong,{children:"/src/PokemonApp.jsx"})," se creo el componente ",(0,s.jsx)(n.strong,{children:"Pokemon"})," el cu\xe1l hace uso del ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useLocalStorage"}),". El ",(0,s.jsx)(n.strong,{children:"hook"})," recibe como par\xe1metro el nombre de la llave y el valor que tendr\xe1 almacenado en el ",(0,s.jsx)(n.strong,{children:"local storage"})," del navegador."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/PokemonApp.jsx"',children:"import React from 'react'\nimport {useLocalStorage} from './LocalStorageHook'\n\nexport const Pokemon = () => {\n\n    const {storedValue, setValue} = useLocalStorage('Pokemon elegido','Picachu');\n\n    return (\n        <div>\n            <h1>Pokemon elegido : {storedValue}</h1>\n        </div>\n    );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"useform",children:"useForm"}),"\n",(0,s.jsxs)(n.p,{children:["En el tutorial ",(0,s.jsx)(n.a,{href:"/cursos/docs/reactjs/proyecto/eventos",children:"Eventos"})," se explic\xf3 el evento ",(0,s.jsx)(n.strong,{children:"onChange"})," que debe ser incrustado por cada elemento ",(0,s.jsx)(n.strong,{children:"HTML"})," que requiera actualizar el valor del campo con un valor de la variable de estado."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Un campo de un formulario cuyos valores son controlados por React es denominado \u201c\n",(0,s.jsx)(n.strong,{children:"componente controlado"}),"."]})}),"\n",(0,s.jsxs)(n.p,{children:["En el siguiente archivo ",(0,s.jsx)(n.strong,{children:"/src/FormApp.jsx"})," se implement\xf3 el componente funcional ",(0,s.jsx)(n.strong,{children:"FormApp"}),". Este componente defini\xf3 dos variables de estado : ",(0,s.jsx)(n.strong,{children:"nombre"})," y ",(0,s.jsx)(n.strong,{children:"edad"}),". Cada variable de estado tiene su propia funci\xf3n ",(0,s.jsx)(n.strong,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"setNombre"})," y ",(0,s.jsx)(n.strong,{children:"setEdad"}),". Adicionalmente, el componente defini\xf3 tres funciones : ",(0,s.jsx)(n.strong,{children:"handleSubmit"}),", ",(0,s.jsx)(n.strong,{children:"handleChangeNombre"})," y ",(0,s.jsx)(n.strong,{children:"handleChangeEdad"}),". Las funciones ",(0,s.jsx)(n.strong,{children:"handleChangeNombre"})," y ",(0,s.jsx)(n.strong,{children:"handleChangeEdad"})," actualizan el valor de la variable de estado : ",(0,s.jsx)(n.strong,{children:"nombre"})," o ",(0,s.jsx)(n.strong,{children:"edad"})," seg\xfan corresponda. La funci\xf3n ",(0,s.jsx)(n.strong,{children:"handleSubmit"})," previene el refresh que se ejecuta por defecto al enviar un formulario."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/FormApp.jsx"',children:'import React from \'react\'\nimport { useState } from \'react\';\n\nexport const FormApp = () => {\n\n    const [nombre, setNombre] = useState(\'\');\n    const [edad, setEdad] = useState(0);\n\n    const handleChangeNombre = (event) => {\n        setNombre(event.target.value);\n    };\n\n    const handleChangeEdad = (event) => {\n        setEdad(Number(event.target.value));\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\'Se envi\xf3 el formulario\');\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor="nombre">Nombre : </label>\n                    <input type="text" id="nombre" onChange={handleChangeNombre} value={nombre}/>\n                </div>\n                <div>\n                    <label htmlFor="edad">Edad : </label>\n                    <input type="number" id="edad" onChange={handleChangeEdad} value={edad}/>\n                </div>\n                <button onSubmit={handleSubmit}>Enviar</button>\n            </form>\n        </>\n    )\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Como podemos ver, existe una definici\xf3n transversal para las funciones orientadas a cumplir con el objetivo del evento ",(0,s.jsx)(n.strong,{children:"onChange"}),". Todas las funciones que capturan este evento actualizan el valor de una variable de estado. Por esta raz\xf3n, esta definici\xf3n puede ser llevada a un ",(0,s.jsx)(n.strong,{children:"hook"})," al cu\xe1l nombraremos ",(0,s.jsx)(n.strong,{children:"useForm"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useForm"})," recibe un par\xe1metro de tipo objeto con los valores iniciales del formulario y define la variable de estado ",(0,s.jsx)(n.strong,{children:"values"})," y su funci\xf3n ",(0,s.jsx)(n.strong,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"setValues"})," para almacenar y actualizar los campos del formulario. Adicionalmente, el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useForm"})," defini\xf3 la funci\xf3n ",(0,s.jsx)(n.strong,{children:"handleChange"})," para capturar el nombre del campo del formulario y el valor.  El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useForm"})," retorna el arreglo con los valores de los campos del formulario. En otras palabras, se esta generalizando la creaci\xf3n de las variables de estado de cada campo de un formulario y su funci\xf3n ",(0,s.jsx)(n.strong,{children:"set"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/useForm.jsx"',children:'import { useState } from "react";\n\nexport const useForm = (initialValues) => {\n    const [values, setValues] = useState(initialValues);\n\n    const handleChange = (event) => {\n      console.log(event.target.name);\n      setValues({\n        ...values,\n        [event.target.name]: event.target.value\n      });\n    }\n\n    return [\n        values,\n        handleChange\n    ];\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["El componente ",(0,s.jsx)(n.strong,{children:"FormApp"})," ya no crear\xe1 las dos variables de estado : ",(0,s.jsx)(n.strong,{children:"nombre"})," y ",(0,s.jsx)(n.strong,{children:"edad"}),", ni tampoco las funciones ",(0,s.jsx)(n.strong,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"setNombre"})," y ",(0,s.jsx)(n.strong,{children:"setEdad"}),". Por el contrario, el componente ",(0,s.jsx)(n.strong,{children:"FormApp"})," importar\xe1 el ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useForm"}),", el cu\xe1l exporta : ",(0,s.jsx)(n.strong,{children:"values"})," y ",(0,s.jsx)(n.strong,{children:"handleChange"}),". Cada elemento ",(0,s.jsx)(n.strong,{children:"HTML"})," del formulario que retorna el componente ",(0,s.jsx)(n.strong,{children:"FormApp"})," deber\xe1 incluir el atributo ",(0,s.jsx)(n.strong,{children:"name"})," y deber\xe1 invocar la funci\xf3n ",(0,s.jsx)(n.strong,{children:"handleChange"})," en el evento ",(0,s.jsx)(n.strong,{children:"onChange"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/FormApp.jsx"',children:'import React from \'react\'\nimport { useState } from \'react\';\nimport { useForm } from \'./useForm\';\n\nexport const FormApp = () => {\n\n    const initialState = { nombre: "", edad: 0 };\n    const [values, handleChange] = useForm(initialState);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(values);\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor="nombre">Nombre : </label>\n                    <input type="text" id="nombre" name="nombre" onChange={handleChange}/>\n                </div>\n                <div>\n                    <label htmlFor="edad">Edad : </label>\n                    <input type="number" id="edad" name="edad" onChange={handleChange}/>\n                </div>\n                <button>Enviar</button>\n            </form>\n        </>\n    )\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>l});var r=o(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);