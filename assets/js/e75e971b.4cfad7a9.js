"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[5e3],{5103:e=>{e.exports=JSON.parse('{"permalink":"/cursos/blog/composicion-reductores","source":"@site/blog/2025-05-18-Composicion-reducers.md","title":"Composici\xf3n de reductores","description":"Cuando se desea dividir la l\xf3gica para el manejo de datos en un aplicativo ReactJS que hace uso de Redux, se debe usar la composici\xf3n de reductores en lugar de muchos stores.","date":"2025-05-18T00:00:00.000Z","tags":[{"inline":false,"label":"React","permalink":"/cursos/blog/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/blog/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"createRoot","permalink":"/cursos/blog/tags/about-createRoot","description":"Tutoriales donde se menciona la palabra createRoot"},{"inline":false,"label":"NPM","permalink":"/cursos/blog/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/blog/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"Redux","permalink":"/cursos/blog/tags/about-redux","description":"Tutoriales donde se menciona la palabra redux"},{"inline":false,"label":"Estado","permalink":"/cursos/blog/tags/about-estado","description":"Tutoriales donde se menciona la palabra estado"},{"inline":false,"label":"flux","permalink":"/cursos/blog/tags/about-flux","description":"Tutoriales donde se menciona la palabra flux"}],"readingTime":1.515,"hasTruncateMarker":true,"authors":[{"name":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","title":"Ing. de Sistemas","url":"https://github.com/jagarciar","page":null,"socials":{"github":"https://github.com/jagarciar"},"imageURL":"https://github.com/jagarciar.png","key":"jeogarod"}],"frontMatter":{"title":"Composici\xf3n de reductores","description":"Cuando se desea dividir la l\xf3gica para el manejo de datos en un aplicativo ReactJS que hace uso de Redux, se debe usar la composici\xf3n de reductores en lugar de muchos stores.","slug":"composicion-reductores","authors":["jeogarod"],"tags":["react","reactjs","createRoot","npm","vite","redux","estado","flux"],"hide_table_of_contents":false},"unlisted":false,"nextItem":{"title":"Arquitectura de datos Flux","permalink":"/cursos/blog/2025/05/18/Flux"}}')},6381:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>d});var n=o(5103),s=o(4848),t=o(8453);const r={title:"Composici\xf3n de reductores",description:"Cuando se desea dividir la l\xf3gica para el manejo de datos en un aplicativo ReactJS que hace uso de Redux, se debe usar la composici\xf3n de reductores en lugar de muchos stores.",slug:"composicion-reductores",authors:["jeogarod"],tags:["react","reactjs","createRoot","npm","vite","redux","estado","flux"],hide_table_of_contents:!1},c="Composici\xf3n de reductores",i={authorsImageUrls:[void 0]},d=[];function l(e){const a={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:["Recordemos que ",(0,s.jsx)(a.a,{href:"/docs/programacion/reactjs/frameworks/redux.md",children:(0,s.jsx)(a.strong,{children:"Redux"})})," esta compuesto de cuatro artefactos principales : las ",(0,s.jsx)(a.strong,{children:"vistas"}),", las ",(0,s.jsx)(a.strong,{children:"acciones"}),", los ",(0,s.jsx)(a.strong,{children:"reductores"})," y el ",(0,s.jsx)(a.strong,{children:"almac\xe9n"}),". Las ",(0,s.jsx)(a.strong,{children:"vistas"}),"  ejecutan las ",(0,s.jsx)(a.strong,{children:"acciones"})," a trav\xe9s de los ",(0,s.jsx)(a.strong,{children:"reductores"}),". Los ",(0,s.jsx)(a.strong,{children:"reductores"})," crean, consultan, actualizan o eliminan datos definidos en el ",(0,s.jsx)(a.strong,{children:"modelo"})," y gestionados por el ",(0,s.jsx)(a.strong,{children:"almac\xe9n"}),"."]}),"\n",(0,s.jsx)(a.p,{children:"Seg\xfan la necesidad del negocio, una aplicaci\xf3n puede tener m\xe1s de una entidad en el modelo de datos. Por ejemplo, si nuestra aplicaci\xf3n trata de un sistema autogestionable de productos adquiridos por un cliente en una compa\xf1\xeda, por lo menos, las entidades cliente y productos deber\xedan existir en el modelo de datos."}),"\n",(0,s.jsxs)(a.p,{children:["Teniendo en cuenta el ejemplo anterior, podriamos pensar en dos modelos : ",(0,s.jsx)(a.strong,{children:"initialCustomerState"})," e ",(0,s.jsx)(a.strong,{children:"initialProductsState"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:'const initialCustomerState = {\n    id:0,\n    name:"Jeyson",\n    age:33,\n    email:"jeogarod@gmail.com"\n}\n\nconst initialProductsState = [\n  {\n    id:0,\n    name:"Salt",\n    value:$300\n  }\n]\n'})}),"\n",(0,s.jsxs)(a.p,{children:["Cada modelo de datos podr\xeda y deber\xeda estar asociado a un reductor. Por ejemplo, ",(0,s.jsx)(a.strong,{children:"clienteReducer"})," responder\xeda a los tipos de acci\xf3n asociados al modelo del cliente y ",(0,s.jsx)(a.strong,{children:"productosReducer"})," responder\xeda a los tipos de acci\xf3n asociados al modelo de los productos."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:'export const clienteReducer = (state = initialCustomerState, action) => {\n    switch (action.type) {\n        case "REGISTER_CUSTOMER":\n            return action.payload;\n\n        default:\n            return state\n    }\n}\n'})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:'export const productosReducer = (state = initialProductsState, action) => {\n    switch (action.type) {\n        case "ADD_PRODUCTO":\n            return [...productos, action.payload]\n        default:\n            return state\n    }\n}\n'})}),"\n",(0,s.jsxs)(a.p,{children:["Cada reductor implementado puede ser combinado creando un \xfanico reductor. Esto se logra a trav\xe9s de ",(0,s.jsx)(a.strong,{children:"combineReducers"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:"import { createStore, combineReducers } from 'redux'\n\nconst reducer = combineReducers({\n    cliente: clienteReducer,\n    productos: productosReducer\n})\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Finalmente durante la creaci\xf3n del ",(0,s.jsx)(a.strong,{children:"almac\xe9n"})," se env\xeda como argumento a la funci\xf3n el resultado de la combinaci\xf3n de los reductores."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:"const store = createStore(reducer)\n"})}),"\n",(0,s.jsx)(a.p,{children:"Esto va permitir que tengamos organizado nuestro c\xf3digo con varios reductores y un \xfanico almac\xe9n."})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,a,o)=>{o.d(a,{R:()=>r,x:()=>c});var n=o(6540);const s={},t=n.createContext(s);function r(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);