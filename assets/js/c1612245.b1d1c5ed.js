"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[1937],{8253:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"programacion/reactjs/frameworks/react-router-dom","title":"React Router DOM","description":"En este tutorial vamos aprender a usar Redux en un proyecto ReactJS haciendo uso de los hooks useSelector y useDispatch.","source":"@site/docs/programacion/reactjs/frameworks/react-router-dom.md","sourceDirName":"programacion/reactjs/frameworks","slug":"/programacion/reactjs/frameworks/react-router-dom","permalink":"/cursos/docs/programacion/reactjs/frameworks/react-router-dom","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/programacion/reactjs/frameworks/react-router-dom.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"createRoot","permalink":"/cursos/docs/tags/about-createRoot","description":"Tutoriales donde se menciona la palabra createRoot"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"React Router DOM","permalink":"/cursos/docs/tags/about-react-router-dom","description":"Tutoriales donde se menciona la palabra react-router-dom"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1744675200000,"sidebarPosition":4,"frontMatter":{"id":"react-router-dom","Title":"React Router DOM","description":"En este tutorial vamos aprender a usar Redux en un proyecto ReactJS haciendo uso de los hooks useSelector y useDispatch.","sidebar_position":4,"author":"jeogarod","tags":["react","reactjs","createRoot","npm","vite","react-router-dom"],"last_update":{"date":"04/15/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"Redux","permalink":"/cursos/docs/programacion/reactjs/frameworks/redux"},"next":{"title":"React Bootstrap","permalink":"/cursos/docs/programacion/reactjs/frameworks/react-bootstrap"}}');var o=a(4848),t=a(8453);const s={id:"react-router-dom",Title:"React Router DOM",description:"En este tutorial vamos aprender a usar Redux en un proyecto ReactJS haciendo uso de los hooks useSelector y useDispatch.",sidebar_position:4,author:"jeogarod",tags:["react","reactjs","createRoot","npm","vite","react-router-dom"],last_update:{date:"04/15/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},i="React Router DOM",c={},d=[];function l(e){const r={admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"react-router-dom",children:"React Router DOM"})}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"React Router"})," es una librer\xeda que se utiliza bastante con ",(0,o.jsx)(r.strong,{children:"React"})," y que nos facilita el proceso de definir el ",(0,o.jsx)(r.strong,{children:"enrutamiento"})," dentro de nuestra aplicaci\xf3n."]}),"\n",(0,o.jsx)(r.admonition,{type:"note",children:(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Enrutar"})," el proceso de mantener ",(0,o.jsx)(r.strong,{children:"sincronizada"})," la URL con el contenido de una aplicaci\xf3n, permiti\xe9ndonos controlar el flujo de datos de la aplicaci\xf3n."]})}),"\n",(0,o.jsxs)(r.p,{children:["La ventaja de usar ",(0,o.jsx)(r.strong,{children:"React Router"})," sobre otras maneras de crear rutas de navegaci\xf3n es que con ella podremos poner ",(0,o.jsx)(r.strong,{children:"enlaces"})," e incluso ",(0,o.jsx)(r.strong,{children:"redirigir rutas"})," ",(0,o.jsx)(r.em,{children:"sin hacer peticiones nuevas a nuestro servidor"}),". Normalmente, cada vez que cambia nuestro enlace estamos llamando a nuestro servidor de nuevo, igual que sucede cuando hacemos una recarga."]}),"\n",(0,o.jsxs)(r.admonition,{type:"tip",children:[(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"React Router"})," mantiene las peticiones a nivel de navegador. Para ello, utiliza el ",(0,o.jsx)(r.strong,{children:"HTML API History"}),", un API de ",(0,o.jsx)(r.strong,{children:"HTML5"})," con el que podemos ",(0,o.jsx)(r.strong,{children:"manipular el historial del navegador"}),". En t\xe9rminos b\xe1sicos, lo que hace esta API es permitirnos a\xf1adir entradas a nuestro historial para que el usuario pueda navegar hacia atr\xe1s y hacia adelante."]}),(0,o.jsx)(r.p,{children:"Entonces, cuando dirigimos al usuario hacia un nuevo enlace, lo que realmente haremos es a\xf1adir una entrada en su historial. Esto quiere decir que proporciona una forma de navegar dentro del navegador, sin hacer llamadas a nuestro servidor o reiniciar nuestra aplicaci\xf3n."}),(0,o.jsxs)(r.p,{children:["Para instalar ",(0,o.jsx)(r.strong,{children:"React Router"})," debemos ejecutar el comando"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",children:"npm install react-router-dom\n"})})]}),"\n",(0,o.jsx)(r.p,{children:"Supongamos el siguiente ejemplo:"}),"\n",(0,o.jsxs)(r.p,{children:["Definidos un barra de navegaci\xf3n a trav\xe9s del siguiente componente funcional ",(0,o.jsx)(r.strong,{children:"NavBar"}),". ",(0,o.jsx)(r.strong,{children:"NavBar"})," retorna a trav\xe9s de ",(0,o.jsx)(r.strong,{children:"NavLink"})," el men\xfa de navegaci\xf3n de nuestra aplicaci\xf3n. ",(0,o.jsx)(r.strong,{children:"NavLink"})," es un elemento de ",(0,o.jsx)(r.strong,{children:"React Router"})," que tiene un atributo ",(0,o.jsx)(r.strong,{children:"to"})," sobre el cu\xe1l debe ser mencionada la ruta."]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"NavBar"})," define tambi\xe9n las rutas a trav\xe9s de ",(0,o.jsx)(r.strong,{children:"Routes"}),". ",(0,o.jsx)(r.strong,{children:"Routes"})," debe incluir uno o varios ",(0,o.jsx)(r.strong,{children:"Route"})," donde a trav\xe9s del atributo ",(0,o.jsx)(r.strong,{children:"path"})," definimos la ruta sobre la cu\xe1l se desplegar\xe1 el componente definido en el atributo ",(0,o.jsx)(r.strong,{children:"element"}),". Es decir, si el usuario oprime click sobre el ",(0,o.jsx)(r.strong,{children:"NavLink"})," ",(0,o.jsx)(r.strong,{children:"About"})," ser\xe1 enrutado al componente ",(0,o.jsx)(r.strong,{children:"AboutScreen"}),"."]}),"\n",(0,o.jsx)(r.admonition,{type:"tip",children:(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"React Router"})," le ofrece la opci\xf3n de que si el usuario quiere acceder a una ruta escrita directamente al navegador y esta no esta definida en ",(0,o.jsx)(r.strong,{children:"Routes"}),", se puede implementar una opci\xf3n ",(0,o.jsx)(r.strong,{children:"(/*)"})," para que siempre re-direccione a ",(0,o.jsx)(r.strong,{children:"/"}),"."]})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",metastring:'title="/src/NavBar.jsx"',children:'import React from \'react\'\nimport { Routes, Route, NavLink, Navigate } from "react-router-dom";\nimport { HomeScreen } from "./HomeScreen";\nimport { AboutScreen } from "./AboutScreen";\n\nexport const Navbar = () => {\n    return (\n        <>\n            <div style={{flexDirection:\'column\'}}>\n                <NavLink to="/" style={{margin:10}}>Home</NavLink>\n                <NavLink to="/about" style={{margin:10}}>About</NavLink>\n            </div>\n            <Routes>\n                <Route path="/" element={<HomeScreen />} />\n                <Route path="/about" element={<AboutScreen />} />\n                <Route path="/*" element={<Navigate to="/" />} />\n            </Routes>\n        </>\n    )\n}\n'})}),"\n",(0,o.jsxs)(r.p,{children:["En el archivo principal ",(0,o.jsx)(r.strong,{children:"main.jsx"})," debemos adicionar ",(0,o.jsx)(r.strong,{children:"BrowserRouter"})," para que toda nuestra aplicaci\xf3n pueda hacer uso de ",(0,o.jsx)(r.strong,{children:"NavBar"}),"."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",metastring:'title="/src/main.jsx"',children:"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Navbar } from './Navbar.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <BrowserRouter>\n      <Navbar />\n    </BrowserRouter>\n  </StrictMode>,\n)\n"})})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,r,a)=>{a.d(r,{R:()=>s,x:()=>i});var n=a(6540);const o={},t=n.createContext(o);function s(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);