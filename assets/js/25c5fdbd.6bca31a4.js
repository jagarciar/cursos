"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[8584],{7423:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"programacion/reactjs/hooks/useCallback","title":"useCallback","description":"En este tutorial vamos hacer uso del hook useCallback para memorizar una funci\xf3n en un proyecto ReactJS","source":"@site/docs/programacion/reactjs/hooks/useCallback.md","sourceDirName":"programacion/reactjs/hooks","slug":"/programacion/reactjs/hooks/useCallback","permalink":"/cursos/docs/programacion/reactjs/hooks/useCallback","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/programacion/reactjs/hooks/useCallback.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"Componente funcional","permalink":"/cursos/docs/tags/about-functional-component","description":"Tutoriales donde se menciona la palabra componente funcional"},{"inline":false,"label":"hooks","permalink":"/cursos/docs/tags/about-hooks","description":"Tutoriales donde se menciona la palabra hooks"},{"inline":false,"label":"useCallback","permalink":"/cursos/docs/tags/about-useCallback","description":"Tutoriales donde se menciona la palabra useCallback"},{"inline":false,"label":"Memorizaci\xf3n","permalink":"/cursos/docs/tags/about-memorizacion","description":"Tutoriales donde se menciona la palabra memorizaci\xf3n"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1745884800000,"sidebarPosition":6,"frontMatter":{"id":"useCallback","title":"useCallback","sidebar_position":6,"author":"jeogarod","description":"En este tutorial vamos hacer uso del hook useCallback para memorizar una funci\xf3n en un proyecto ReactJS","tags":["react","reactjs","npm","vite","componente-funcional","hooks","useCallback","memorizacion"],"last_update":{"date":"04/29/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"useMemo","permalink":"/cursos/docs/programacion/reactjs/hooks/useMemo"},"next":{"title":"useForm","permalink":"/cursos/docs/programacion/reactjs/hooks/useForm"}}');var s=a(4848),r=a(8453);const c={id:"useCallback",title:"useCallback",sidebar_position:6,author:"jeogarod",description:"En este tutorial vamos hacer uso del hook useCallback para memorizar una funci\xf3n en un proyecto ReactJS",tags:["react","reactjs","npm","vite","componente-funcional","hooks","useCallback","memorizacion"],last_update:{date:"04/29/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},t="useCallback",i={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"usecallback",children:"useCallback"})}),"\n",(0,s.jsxs)(n.p,{children:["En el contexto de ",(0,s.jsx)(n.strong,{children:"React"}),", ",(0,s.jsx)(n.strong,{children:"memoizaci\xf3n"})," se refiere a la ",(0,s.jsx)(n.strong,{children:"optimizaci\xf3n"})," que se puede aplicar para ",(0,s.jsx)(n.strong,{children:"evitar renderizados innecesarios"})," y ",(0,s.jsx)(n.strong,{children:"mejorar el rendimiento de los componentes"}),". En ",(0,s.jsx)(n.strong,{children:"React"}),", cuando los datos o el estado de un componente cambian, este se vuelve a renderizar para reflejar esos cambios en la interfaz de usuario. Sin embargo, en algunos casos, este proceso puede ser ineficiente si se renderizan componentes hijos que no han experimentado cambios en sus propios datos."]}),"\n",(0,s.jsxs)(n.p,{children:["La ",(0,s.jsx)(n.strong,{children:"memorizaci\xf3n"})," en ",(0,s.jsx)(n.strong,{children:"React"})," se logra utilizando algunos ",(0,s.jsx)(n.strong,{children:"hooks"})," como: ",(0,s.jsx)(n.a,{href:"/cursos/docs/programacion/reactjs/hooks/useMemo",children:"useMemo"})," o ",(0,s.jsx)(n.strong,{children:"useCallback"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"useCallback"})," es \xfatil cuando necesitas pasar una ",(0,s.jsx)(n.strong,{children:"funci\xf3n"})," como una ",(0,s.jsx)(n.strong,{children:"propiedad"})," a un ",(0,s.jsx)(n.strong,{children:"componente hijo"}),", y quieres asegurarte que la referencia de la funci\xf3n no cambia innecesariamente. Al ",(0,s.jsx)(n.strong,{children:"memoizar"})," la funci\xf3n usando ",(0,s.jsx)(n.strong,{children:"useCallback"}),", puedes asegurarte que la referencia de la funci\xf3n sigue siendo siempre el mismo y cuando sus dependencias no cambien."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["Cuando una referencia de una funci\xf3n cambia, cualquier ",(0,s.jsx)(n.strong,{children:"componente hijo"})," que recibe la funci\xf3n como una propiedad se re-renderizar\xe1, inclusive si la l\xf3gica de la funci\xf3n misma no ha cambiado."]}),(0,s.jsx)(n.p,{children:"En otras palabras, el simple acto de re-declarar una funci\xf3n (inclusive la misma funci\xf3n exacta), causa que la referencia cambie, y causar\xe1 que el componente hijo que recibe la funci\xf3n como una propiedad se renderice innecesariamente."})]}),"\n",(0,s.jsxs)(n.p,{children:["El componente funcional que tomaremos de ejemplo fue nombrado ",(0,s.jsx)(n.strong,{children:"CallBack"}),". Este componente defini\xf3 dos variables de estado nombradas : ",(0,s.jsx)(n.strong,{children:"contador"})," y ",(0,s.jsx)(n.strong,{children:"num"})," con sus respectivas funciones ",(0,s.jsx)(n.strong,{children:"set"})," ",(0,s.jsx)(n.strong,{children:"setContador"})," y ",(0,s.jsx)(n.strong,{children:"setNum"}),". Adicionalmente, el componente funcional ",(0,s.jsx)(n.strong,{children:"CallBack"})," implement\xf3 una funci\xf3n ",(0,s.jsx)(n.strong,{children:"handleChange"})," la cu\xe1l actualiza el valor de la variable de estado : ",(0,s.jsx)(n.strong,{children:"num"})," e implement\xf3 a trav\xe9s del ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCallback"})," la constante ",(0,s.jsx)(n.strong,{children:"incrementarContador"})," que recibe un par\xe1metro ",(0,s.jsx)(n.strong,{children:"num"})," y ejecuta la funci\xf3n ",(0,s.jsx)(n.strong,{children:"setContador"}),". El ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCallback"})," solo ser\xe1 ejecutado cuando el valor de la variable de estado ",(0,s.jsx)(n.strong,{children:"num"})," sea actualizada."]}),"\n",(0,s.jsxs)(n.p,{children:["El componente funcional ",(0,s.jsx)(n.strong,{children:"CallBack"})," retorna en un parr\xe1fo el valor de la variable de estado ",(0,s.jsx)(n.strong,{children:"contador"}),", una caja de texto la cu\xe1l refiere al n\xfamero que ser\xe1 adicionado al contador. Esta caja de texto lanza la funci\xf3n ",(0,s.jsx)(n.strong,{children:"handleChange"})," en el evento ",(0,s.jsx)(n.strong,{children:"onChange"}),". Finalmente, el componente funcional ",(0,s.jsx)(n.strong,{children:"CallBack"})," retorna un bot\xf3n encargado de ejecutar la funci\xf3n ",(0,s.jsx)(n.strong,{children:"memoizada"})," del ",(0,s.jsx)(n.strong,{children:"hook"})," ",(0,s.jsx)(n.strong,{children:"useCallback"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/CallBack.jsx"',children:'import React, { useCallback, useState } from \'react\'\n\nexport const CallBack = () => {\n\n    const [contador, setContador] = useState(0);\n    const [num, setNum] = useState(0);\n\n    const handleChange = (event) => {\n        setNum(event.target.value)\n    }\n\n    const incrementarContador = useCallback((num) => {\n        setContador(Number(contador) + Number(num));\n    }, [num]);\n\n    return (\n        <>\n            <div>\n                <p>Contador : {contador}</p>\n                <input type="number" id="contador" name="contador" onChange={handleChange} value={num} placeholder=\'Digite el valor a sumar al contador\'/>\n                <button onClick={() => incrementarContador(num)}>Sumar</button>\n            </div>\n        </>\n    )\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"danger",children:[(0,s.jsx)(n.p,{children:"Durante la realizaci\xf3n de este tutorial tuvimos un inconveniente que arrojaba la siguiente excepci\xf3n :"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Too many re-renders. React limits the number of renders to prevent an infinite loop."})}),(0,s.jsxs)(n.p,{children:["Para este caso, nos sucedia porque al definir el bot\xf3n, asignamos la funci\xf3n ",(0,s.jsx)(n.strong,{children:"incrementarContador"})," para la invocaci\xf3n del evento ",(0,s.jsx)(n.strong,{children:"onClick"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<button onClick={incrementarContador(num)}>Sumar</button>\n"})}),(0,s.jsxs)(n.p,{children:["La soluci\xf3n es definir una funci\xf3n que invoque a la funci\xf3n ",(0,s.jsx)(n.strong,{children:"incrementarContador"})," y que responda al evento ",(0,s.jsx)(n.strong,{children:"onClick"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<button onClick={() => incrementarContador(num)}>Sumar</button>\n"})}),(0,s.jsxs)(n.p,{children:["Esto sucede dado que la definici\xf3n base de un ",(0,s.jsx)(n.strong,{children:"handleClick"})," es:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const handleClick = (event) => { }\n"})}),(0,s.jsxs)(n.p,{children:["Mientras que la definici\xf3n de ",(0,s.jsx)(n.strong,{children:"incrementarContador"})," es:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const incrementarContador = useCallback((num) => {\n        setContador(Number(contador) + Number(num));\n    }, [num]);\n"})})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>c,x:()=>t});var o=a(6540);const s={},r=o.createContext(s);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);