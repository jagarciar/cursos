"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[4741],{646:e=>{e.exports=JSON.parse('{"permalink":"/cursos/blog/flux","source":"@site/blog/2025-05-18-Flux.md","title":"Flux","description":"Flux es un patr\xf3n de arquitectura de datos para aplicaciones web que permiten gestionar el estado.","date":"2025-05-18T00:00:00.000Z","tags":[{"inline":false,"label":"flux","permalink":"/cursos/blog/tags/about-flux","description":"Tutoriales donde se menciona la palabra flux"},{"inline":false,"label":"Patrones de software","permalink":"/cursos/blog/tags/about-patron-software","description":"Tutoriales donde se menciona la palabra patrones de desarrollo o dise\xf1o de software"}],"readingTime":1.595,"hasTruncateMarker":true,"authors":[{"name":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","title":"Ing. de Sistemas","url":"https://github.com/jagarciar","page":null,"socials":{"github":"https://github.com/jagarciar"},"imageURL":"https://github.com/jagarciar.png","key":"jeogarod"}],"frontMatter":{"Titule":"Flux","description":"Flux es un patr\xf3n de arquitectura de datos para aplicaciones web que permiten gestionar el estado.","authors":["jeogarod"],"sidebar_position":2,"slug":"flux","tags":["flux","patron-software"],"last_update":{"date":"05/19/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"},"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Composici\xf3n de reductores","permalink":"/cursos/blog/composicion-reductores"}}')},3601:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var s=n(646),t=n(4848),o=n(8453);const r={Titule:"Flux",description:"Flux es un patr\xf3n de arquitectura de datos para aplicaciones web que permiten gestionar el estado.",authors:["jeogarod"],sidebar_position:2,slug:"flux",tags:["flux","patron-software"],last_update:{date:"05/19/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"},hide_table_of_contents:!1},i="Flux",l={authorsImageUrls:[void 0]},u=[];function c(e){const a={admonition:"admonition",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Flux"})," es una ",(0,t.jsx)(a.strong,{children:"arquitectura"})," que asegura que los ",(0,t.jsx)(a.strong,{children:"datos"})," en una ",(0,t.jsx)(a.strong,{children:"aplicaci\xf3n web"})," fluyan en una sola direcci\xf3n, desde el inicio de un cambio hasta que ese cambio se refleja en la ",(0,t.jsx)(a.strong,{children:"interfaz de usuario"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Flux"})," propone una arquitectura en la que el flujo de datos es unidireccional. Los ",(0,t.jsx)(a.strong,{children:"datos"})," viajan desde la ",(0,t.jsx)(a.strong,{children:"vista"})," por medio de ",(0,t.jsx)(a.strong,{children:"acciones"})," y llegan a un ",(0,t.jsx)(a.strong,{children:"Store"})," desde el cual se actualizar\xe1 la vista de nuevo."]}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsxs)(a.p,{children:["La funci\xf3n principal de ",(0,t.jsx)(a.strong,{children:"Flux"})," es gestionar el ",(0,t.jsx)(a.strong,{children:"estado"})," de una aplicaci\xf3n, definiendo un ",(0,t.jsx)(a.strong,{children:"flujo unidireccional de datos"}),". Esto significa que los datos s\xf3lo pueden fluir en una direcci\xf3n, desde los componentes hacia el estado de la aplicaci\xf3n y luego hacia los componentes nuevamente."]})})]})}function d(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>i});var s=n(6540);const t={},o=s.createContext(t);function r(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);