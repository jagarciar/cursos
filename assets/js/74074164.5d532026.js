"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[1894],{1375:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"arquitectura/patrones/flux","title":"Flux","description":"Flux es un patr\xf3n de arquitectura de datos para aplicaciones web que permiten gestionar el estado.","source":"@site/docs/arquitectura/patrones/flux.md","sourceDirName":"arquitectura/patrones","slug":"/arquitectura/patrones/flux","permalink":"/docs/arquitectura/patrones/flux","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/arquitectura/patrones/flux.md","tags":[{"inline":false,"label":"flux","permalink":"/docs/tags/about-flux","description":"Tutoriales donde se menciona la palabra flux"},{"inline":false,"label":"Patrones de software","permalink":"/docs/tags/about-patron-software","description":"Tutoriales donde se menciona la palabra patrones de desarrollo o dise\xf1o de software"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1747180800000,"sidebarPosition":1,"frontMatter":{"id":"flux","Titule":"Flux","description":"Flux es un patr\xf3n de arquitectura de datos para aplicaciones web que permiten gestionar el estado.","author":"jeogarod","sidebar_position":1,"tags":["flux","patron-software"],"last_update":{"date":"05/14/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"Patrones","permalink":"/docs/patrones"},"next":{"title":"Programaci\xf3n","permalink":"/docs/programacion"}}');var r=n(4848),i=n(8453);const t={id:"flux",Titule:"Flux",description:"Flux es un patr\xf3n de arquitectura de datos para aplicaciones web que permiten gestionar el estado.",author:"jeogarod",sidebar_position:1,tags:["flux","patron-software"],last_update:{date:"05/14/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},o="Flux",c={},l=[{value:"Vistas",id:"vistas",level:2},{value:"Almac\xe9n",id:"almac\xe9n",level:2},{value:"Acci\xf3n",id:"acci\xf3n",level:2},{value:"Creadores de acciones",id:"creadores-de-acciones",level:3},{value:"Dispatcher",id:"dispatcher",level:2}];function d(e){const a={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"flux",children:"Flux"})}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Flux"})," es una ",(0,r.jsx)(a.strong,{children:"arquitectura"})," que facilita la ",(0,r.jsx)(a.strong,{children:"gesti\xf3n"})," y ",(0,r.jsx)(a.strong,{children:"flujo de datos"})," de una ",(0,r.jsx)(a.strong,{children:"aplicaci\xf3n web"}),". Propone que el camino de los datos tenga un \xfanico sentido y que exista una ",(0,r.jsx)(a.strong,{children:"\xfanica fuente de verdad"}),". De este modo todo el flujo acaba llegando a un sitio que almacena el estado y que se encarga de ",(0,r.jsx)(a.strong,{children:"actualizar"})," las ",(0,r.jsx)(a.strong,{children:"vistas"})," que est\xe1n ",(0,r.jsx)(a.strong,{children:"suscritas"})," a los cambios que en este tienen lugar."]}),"\n",(0,r.jsx)(a.admonition,{type:"tip",children:(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Flux"})," propone una arquitectura en la que el flujo de datos es unidireccional. Los ",(0,r.jsx)(a.strong,{children:"datos"})," viajan desde la ",(0,r.jsx)(a.strong,{children:"vista"})," por medio de ",(0,r.jsx)(a.strong,{children:"acciones"})," y llegan a un ",(0,r.jsx)(a.strong,{children:"Store"})," desde el cual se actualizar\xe1 la vista de nuevo."]})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Arquitectura Flux",src:n(5420).A+"",width:"570",height:"207"})}),"\n",(0,r.jsxs)(a.p,{children:["En Resumen, el patr\xf3n ",(0,r.jsx)(a.strong,{children:"flux"})," sigue el siguiente recorrido:"]}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:"La vista, mediante un evento env\xeda una acci\xf3n con la intenci\xf3n de realizar un cambio en el estado"}),"\n",(0,r.jsx)(a.li,{children:"La acci\xf3n contiene el tipo y los datos (si los hubiere) y es enviada al dispatcher."}),"\n",(0,r.jsx)(a.li,{children:"El dispatcher propaga la acci\xf3n al Store y se procesa en orden de llegada."}),"\n",(0,r.jsx)(a.li,{children:"El Store recibe la acci\xf3n y dependiendo del tipo recibido, actualiza el estado y notifica a las vistas de ese cambio."}),"\n",(0,r.jsx)(a.li,{children:"La vista recibe la notificaci\xf3n y se actualiza con los cambios."}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"vistas",children:"Vistas"}),"\n",(0,r.jsxs)(a.p,{children:["La ",(0,r.jsx)(a.strong,{children:"vista"})," ser\xedan los ",(0,r.jsx)(a.strong,{children:"componentes web"}),", ya sean construidos nativamente, con Polymer, con Angular, React, etc..."]}),"\n",(0,r.jsx)(a.h2,{id:"almac\xe9n",children:"Almac\xe9n"}),"\n",(0,r.jsxs)(a.p,{children:["Un ",(0,r.jsx)(a.strong,{children:"almac\xe9n"})," ser\xeda lo m\xe1s parecido al ",(0,r.jsx)(a.strong,{children:"modelo de la aplicaci\xf3n"})," dado que guarda los datos/estado de la aplicaci\xf3n."]}),"\n",(0,r.jsxs)(a.p,{children:["El ",(0,r.jsx)(a.strong,{children:"almac\xe9n"})," va a tener cuatro responsabilidades:"]}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:"Almacenar el estado global de la aplicaci\xf3n"}),"\n",(0,r.jsxs)(a.li,{children:["Dar acceso al estado mediante ",(0,r.jsx)(a.strong,{children:"store.getState()"})]}),"\n",(0,r.jsxs)(a.li,{children:["Permitir que el estado se actualice mediante ",(0,r.jsx)(a.strong,{children:"store.dispatch()"})]}),"\n",(0,r.jsxs)(a.li,{children:["Registrar listeners mediante ",(0,r.jsx)(a.strong,{children:"store.subscribe(listener)"})]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"acci\xf3n",children:"Acci\xf3n"}),"\n",(0,r.jsxs)(a.p,{children:["Las ",(0,r.jsx)(a.strong,{children:"Acciones"})," son POJOs (",(0,r.jsx)(a.strong,{children:"Plain Old JavaScript Objects"}),") con al menos una propiedad que indica el ",(0,r.jsx)(a.strong,{children:"tipo de acci\xf3n"})," y, de ser necesario, otras propiedades indicando cualquier otro dato necesario para efectuar nuestra acci\xf3n. Normalmente se usa el formato definido en el ",(0,r.jsx)(a.strong,{children:"Flux Standard Action (FSA)"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"{\n    type: 'ADD_TASK',\n    payload: {\n        id : 1\n    },\n}\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Para enviar una acci\xf3n a nuestro ",(0,r.jsx)(a.strong,{children:"Store"})," usamos la funci\xf3n ",(0,r.jsx)(a.strong,{children:"store.dispatch()"})," pasando nuestra ",(0,r.jsx)(a.strong,{children:"acci\xf3n"})," como ",(0,r.jsx)(a.strong,{children:"\xfanico par\xe1metro"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"creadores-de-acciones",children:"Creadores de acciones"}),"\n",(0,r.jsxs)(a.p,{children:["Estos son simplemente ",(0,r.jsx)(a.strong,{children:"funciones"})," que pueden o no recibir par\xe1metros y devuelven una ",(0,r.jsx)(a.strong,{children:"acci\xf3n"})," (un ",(0,r.jsx)(a.strong,{children:"POJO"}),"), es muy buena idea, para evitar problemas de consistencia, ",(0,r.jsx)(a.em,{children:"programar una funci\xf3n por cada tipo de acci\xf3n"})," y usarlas en vez de armar nuestros objetos a mano."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"function addTask(id) {\n    return {\n        type: 'ADD_TASK',\n        payload: {\n            id,\n        },\n    };\n}\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Debido a que normalmente son funciones puras son f\xe1ciles de testear. Luego de ejecutar nuestra funci\xf3n, para poder despachar la acci\xf3n, es simplemente llamar a la funci\xf3n ",(0,r.jsx)(a.strong,{children:"dispatch(addTask(1))"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"dispatcher",children:"Dispatcher"}),"\n",(0,r.jsx)(a.p,{children:"Las acciones son enviadas a un dispatcher que se encarga de dispararla o propagarla hasta la Store. La vista es la que se encarga de enviar las acciones al dispatcher.Un dispatcher no es m\xe1s que un mediador entre la Store o Stores y las acciones. Sirve para desacoplar la Store de la vista, ya que as\xed no es necesario conocer que Store maneja una acci\xf3n concreta."})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5420:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/flux-881c33dd0714412bc48de4ed595e7f12.png"},8453:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function t(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);