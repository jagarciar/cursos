"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[1613],{5326:(e,a,n)=>{n.d(a,{A:()=>o});const o=n.p+"assets/images/Rick-Morty-1-f9aee3e1d680e86757d80fb8716da62c.png"},7125:(e,a,n)=>{n.d(a,{A:()=>o});const o=n.p+"assets/images/Rick-Morty-2-4b66190ec727fb42535647aefd644622.png"},8259:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>t,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"programacion/reactjs/ejemplos/react-rick","title":"Rick & Morty","description":"Paso a paso de la implementaci\xf3n de una aplicaci\xf3n de ejemplo nombrada Rick and Morty que incluir\xe1 todos los conceptos que fueron estudiados en la ruta de aprendizaje b\xe1sica","source":"@site/docs/programacion/reactjs/ejemplos/rickandmorty.md","sourceDirName":"programacion/reactjs/ejemplos","slug":"/programacion/reactjs/ejemplos/react-rick","permalink":"/cursos/docs/programacion/reactjs/ejemplos/react-rick","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/programacion/reactjs/ejemplos/rickandmorty.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"CSS","permalink":"/cursos/docs/tags/about-css","description":"Tutoriales donde se menciona la palabra css"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"createRoot","permalink":"/cursos/docs/tags/about-createRoot","description":"Tutoriales donde se menciona la palabra createRoot"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"Bootstrap","permalink":"/cursos/docs/tags/about-bootstrap","description":"Tutoriales donde se menciona la palabra Bootstrap"},{"inline":false,"label":"Redux","permalink":"/cursos/docs/tags/about-redux","description":"Tutoriales donde se menciona la palabra redux"},{"inline":false,"label":"useState","permalink":"/cursos/docs/tags/about-useState","description":"Tutoriales donde se menciona la palabra useState"},{"inline":false,"label":"useFetch","permalink":"/cursos/docs/tags/about-useFetch","description":"Tutoriales donde se menciona la palabra useFetch"},{"inline":false,"label":"useEffect","permalink":"/cursos/docs/tags/about-useEffect","description":"Tutoriales donde se menciona la palabra useEffect"},{"inline":false,"label":"API REST","permalink":"/cursos/docs/tags/about-api-rest","description":"Tutoriales donde se menciona la palabra API REST"},{"inline":false,"label":"API First","permalink":"/cursos/docs/tags/about-api-first","description":"Tutoriales donde se menciona la palabra API First"},{"inline":false,"label":"hooks","permalink":"/cursos/docs/tags/about-hooks","description":"Tutoriales donde se menciona la palabra hooks"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1747612800000,"sidebarPosition":2,"frontMatter":{"id":"react-rick","Title":"Rick","description":"Paso a paso de la implementaci\xf3n de una aplicaci\xf3n de ejemplo nombrada Rick and Morty que incluir\xe1 todos los conceptos que fueron estudiados en la ruta de aprendizaje b\xe1sica","sidebar_position":2,"authors":"jeogarod","tags":["react","css","reactjs","createRoot","npm","vite","bootstrap","redux","useState","useFetch","useEffect","api-rest","api-first","hooks"],"last_update":{"date":"05/19/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"Pokem\xf3n","permalink":"/cursos/docs/programacion/reactjs/ejemplos/react-pokemon"},"next":{"title":"RPA","permalink":"/cursos/docs/rpa"}}');var r=n(4848),s=n(8453);const i={id:"react-rick",Title:"Rick",description:"Paso a paso de la implementaci\xf3n de una aplicaci\xf3n de ejemplo nombrada Rick and Morty que incluir\xe1 todos los conceptos que fueron estudiados en la ruta de aprendizaje b\xe1sica",sidebar_position:2,authors:"jeogarod",tags:["react","css","reactjs","createRoot","npm","vite","bootstrap","redux","useState","useFetch","useEffect","api-rest","api-first","hooks"],last_update:{date:"05/19/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},t="Rick & Morty",c={},d=[{value:"Creaci\xf3n del proyecto",id:"creaci\xf3n-del-proyecto",level:2},{value:"Instalaci\xf3n de frameworks adicionales",id:"instalaci\xf3n-de-frameworks-adicionales",level:2},{value:"Dise\xf1o",id:"dise\xf1o",level:2},{value:"Desarollo",id:"desarollo",level:2},{value:"Acciones",id:"acciones",level:3},{value:"Reducers",id:"reducers",level:3},{value:"Almac\xe9n",id:"almac\xe9n",level:3},{value:"Vistas",id:"vistas",level:3},{value:"Resultado final",id:"resultado-final",level:2}];function p(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"rick--morty",children:"Rick & Morty"})}),"\n",(0,r.jsx)(a.p,{children:"En este tutorial vamos a desarrollar desde cero una aplicaci\xf3n nombrada Rick & Morty. El objetivo de esta aplicaci\xf3n es consultar a trav\xe9s de la API los personajes de Rick & Morty, permitirle al usuario seleccionar uno y mostrar algunos datos disponibles del personaje seleccionado."}),"\n",(0,r.jsx)(a.h2,{id:"creaci\xf3n-del-proyecto",children:"Creaci\xf3n del proyecto"}),"\n",(0,r.jsxs)(a.p,{children:["Lo primero que debemos hacer es crear un proyecto en ",(0,r.jsx)(a.strong,{children:"ReactJS"}),". Para ello y teniendo en cuenta el tutorial ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/proyecto/crear-proyecto",children:(0,r.jsx)(a.strong,{children:"\xbfC\xf3mo crear un proyecto ReactJS?"})})," debemos ejecutar el siguiente comando:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"npm create vite@latest\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Durante la creaci\xf3n vamos a darle un nombre al proyecto, a seleccionar el framework ",(0,r.jsx)(a.strong,{children:"ReactJS"})," y la variante ",(0,r.jsx)(a.strong,{children:"JavaScript + SWC"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["Despu\xe9s de creado el proyecto, debemos acceder a la carpeta que fue creada e instalar los paquetes y/o dependencias necesarias. Para ello y teniendo en cuenta el tutorial ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/proyecto/crear-proyecto",children:(0,r.jsx)(a.strong,{children:"\xbfC\xf3mo crear un proyecto ReactJS?"})})," debemos ejecutar el siguiente comando:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"npm install\n"})}),"\n",(0,r.jsx)(a.h2,{id:"instalaci\xf3n-de-frameworks-adicionales",children:"Instalaci\xf3n de frameworks adicionales"}),"\n",(0,r.jsxs)(a.p,{children:["El proyecto que fue creado previamente tiene los paquetes y/o dependencias necesarias. Sin embargo, para esta aplicaci\xf3n vamos a incluir el uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/frameworks/react-bootstrap",children:(0,r.jsx)(a.strong,{children:"React Bootstrap"})})," y ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/frameworks/redux",children:(0,r.jsx)(a.strong,{children:"Redux"})})]}),"\n",(0,r.jsx)(a.p,{children:"Por tal motivo, debemos ejecutar los siguientes comandos:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"npm install bootstrap\nnpm install react-bootstrap\nnpm install redux\nnpm install react-redux\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Dado que este proyecto har\xe1 uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/frameworks/react-bootstrap",children:(0,r.jsx)(a.strong,{children:"React Bootstrap"})}),", debemos adicionar en el ",(0,r.jsx)(a.strong,{children:"index.html"})," la referencia ",(0,r.jsx)(a.strong,{children:"CDN"})," a los estilos gr\xe1ficos y de paso vamos a modificar el t\xedtulo por Pokem\xf3n."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-html",children:'<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <link rel="icon" type="image/svg+xml" href="/vite.svg" />\n    <link \n      rel="stylesheet" \n      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" \n      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" \n      crossorigin="anonymous"\n    >\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Rick & Morty</title>\n  </head>\n  <body>\n    <div id="root"></div>\n    <script type="module" src="/src/main.jsx"><\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(a.h2,{id:"dise\xf1o",children:"Dise\xf1o"}),"\n",(0,r.jsxs)(a.p,{children:["El dise\xf1o de la aplicaci\xf3n gozar\xe1 de la estrateg\xeda ",(0,r.jsx)(a.a,{href:"/blog/api-first",children:(0,r.jsx)(a.strong,{children:"API First"})})," dado que fueron entregados como insumo los endpoint de las API's. Estas API's deben ser consumidas desde los componentes del aplicativo ReactJS."]}),"\n",(0,r.jsxs)(a.p,{children:["El primer endpoint (",(0,r.jsx)(a.strong,{children:(0,r.jsx)(a.a,{href:"https://rickandmortyapi.com/api/character",children:"https://rickandmortyapi.com/api/character"})}),") es una API expuesta bajo un m\xe9todo ",(0,r.jsx)(a.strong,{children:"HTTP GET"}),". Al consumir esta API obtenemos una respuesta en formato ",(0,r.jsx)(a.strong,{children:"JSON"})," de la cu\xe1l solo los interesa el objeto ",(0,r.jsx)(a.strong,{children:"results"}),". El objeto ",(0,r.jsx)(a.strong,{children:"results"})," es un arreglo donde cada item contiene dos campos : ",(0,r.jsx)(a.strong,{children:"id"})," y ",(0,r.jsx)(a.strong,{children:"name"}),". El campo ",(0,r.jsx)(a.strong,{children:"name"})," refiere al nombre del personaje y el campo ",(0,r.jsx)(a.strong,{children:"id"})," refiere al identificador del personaje."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-json",children:'{\n    {\n    "info": {\n        "count": 826,\n        "pages": 42,\n        "next": "https://rickandmortyapi.com/api/character?page=2",\n        "prev": null\n    },\n    "results": [\n        {\n            "id": 1,\n            "name": "Rick Sanchez",\n            "status": "Alive",\n            "species": "Human",\n            "type": "",\n            "gender": "Male",\n            "origin": {\n                "name": "Earth (C-137)",\n                "url": "https://rickandmortyapi.com/api/location/1"\n            },\n            "location": {\n                "name": "Citadel of Ricks",\n                "url": "https://rickandmortyapi.com/api/location/3"\n            },\n            "image": "https://rickandmortyapi.com/api/character/avatar/1.jpeg",\n            "episode": [\n                "https://rickandmortyapi.com/api/episode/1",\n                "https://rickandmortyapi.com/api/episode/2",\n                "https://rickandmortyapi.com/api/episode/3",\n                "https://rickandmortyapi.com/api/episode/4",\n                "https://rickandmortyapi.com/api/episode/5",\n                "https://rickandmortyapi.com/api/episode/6",\n                "https://rickandmortyapi.com/api/episode/7",\n                "https://rickandmortyapi.com/api/episode/8",\n                "https://rickandmortyapi.com/api/episode/9",\n                "https://rickandmortyapi.com/api/episode/10",\n                "https://rickandmortyapi.com/api/episode/11",\n                "https://rickandmortyapi.com/api/episode/12",\n                "https://rickandmortyapi.com/api/episode/13",\n                "https://rickandmortyapi.com/api/episode/14",\n                "https://rickandmortyapi.com/api/episode/15",\n                "https://rickandmortyapi.com/api/episode/16",\n                "https://rickandmortyapi.com/api/episode/17",\n                "https://rickandmortyapi.com/api/episode/18",\n                "https://rickandmortyapi.com/api/episode/19",\n                "https://rickandmortyapi.com/api/episode/20",\n                "https://rickandmortyapi.com/api/episode/21",\n                "https://rickandmortyapi.com/api/episode/22",\n                "https://rickandmortyapi.com/api/episode/23",\n                "https://rickandmortyapi.com/api/episode/24",\n                "https://rickandmortyapi.com/api/episode/25",\n                "https://rickandmortyapi.com/api/episode/26",\n                "https://rickandmortyapi.com/api/episode/27",\n                "https://rickandmortyapi.com/api/episode/28",\n                "https://rickandmortyapi.com/api/episode/29",\n                "https://rickandmortyapi.com/api/episode/30",\n                "https://rickandmortyapi.com/api/episode/31",\n                "https://rickandmortyapi.com/api/episode/32",\n                "https://rickandmortyapi.com/api/episode/33",\n                "https://rickandmortyapi.com/api/episode/34",\n                "https://rickandmortyapi.com/api/episode/35",\n                "https://rickandmortyapi.com/api/episode/36",\n                "https://rickandmortyapi.com/api/episode/37",\n                "https://rickandmortyapi.com/api/episode/38",\n                "https://rickandmortyapi.com/api/episode/39",\n                "https://rickandmortyapi.com/api/episode/40",\n                "https://rickandmortyapi.com/api/episode/41",\n                "https://rickandmortyapi.com/api/episode/42",\n                "https://rickandmortyapi.com/api/episode/43",\n                "https://rickandmortyapi.com/api/episode/44",\n                "https://rickandmortyapi.com/api/episode/45",\n                "https://rickandmortyapi.com/api/episode/46",\n                "https://rickandmortyapi.com/api/episode/47",\n                "https://rickandmortyapi.com/api/episode/48",\n                "https://rickandmortyapi.com/api/episode/49",\n                "https://rickandmortyapi.com/api/episode/50",\n                "https://rickandmortyapi.com/api/episode/51"\n            ],\n            "url": "https://rickandmortyapi.com/api/character/1",\n            "created": "2017-11-04T18:48:46.250Z"\n        }\n    ]\n}\n'})}),"\n",(0,r.jsxs)(a.p,{children:["El segundo endpoint depender\xe1 del personaje que seleccione el usuario. Por ejemplo, si el usuario selecciona el personaje Rick Sanchez, debe ser consumida bajo un m\xe9todo ",(0,r.jsx)(a.strong,{children:"HTTP GET"})," la API ",(0,r.jsx)(a.strong,{children:(0,r.jsx)(a.a,{href:"https://rickandmortyapi.com/api/character/1",children:"https://rickandmortyapi.com/api/character/1"})}),". Al consumir esta API obtenemos una respuesta en formato ",(0,r.jsx)(a.strong,{children:"JSON"})," de la cu\xe1l solo los interesan los campos : ",(0,r.jsx)(a.strong,{children:"status"}),", ",(0,r.jsx)(a.strong,{children:"species"}),", ",(0,r.jsx)(a.strong,{children:"gender"})," e ",(0,r.jsx)(a.strong,{children:"image"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-json",children:'{\n    "id": 1,\n    "name": "Rick Sanchez",\n    "status": "Alive",\n    "species": "Human",\n    "type": "",\n    "gender": "Male",\n    "origin": {\n        "name": "Earth (C-137)",\n        "url": "https://rickandmortyapi.com/api/location/1"\n    },\n    "location": {\n        "name": "Citadel of Ricks",\n        "url": "https://rickandmortyapi.com/api/location/3"\n    },\n    "image": "https://rickandmortyapi.com/api/character/avatar/1.jpeg",\n    "episode": [\n        "https://rickandmortyapi.com/api/episode/1",\n        "https://rickandmortyapi.com/api/episode/2",\n        "https://rickandmortyapi.com/api/episode/3",\n        "https://rickandmortyapi.com/api/episode/4",\n        "https://rickandmortyapi.com/api/episode/5",\n        "https://rickandmortyapi.com/api/episode/6",\n        "https://rickandmortyapi.com/api/episode/7",\n        "https://rickandmortyapi.com/api/episode/8",\n        "https://rickandmortyapi.com/api/episode/9",\n        "https://rickandmortyapi.com/api/episode/10",\n        "https://rickandmortyapi.com/api/episode/11",\n        "https://rickandmortyapi.com/api/episode/12",\n        "https://rickandmortyapi.com/api/episode/13",\n        "https://rickandmortyapi.com/api/episode/14",\n        "https://rickandmortyapi.com/api/episode/15",\n        "https://rickandmortyapi.com/api/episode/16",\n        "https://rickandmortyapi.com/api/episode/17",\n        "https://rickandmortyapi.com/api/episode/18",\n        "https://rickandmortyapi.com/api/episode/19",\n        "https://rickandmortyapi.com/api/episode/20",\n        "https://rickandmortyapi.com/api/episode/21",\n        "https://rickandmortyapi.com/api/episode/22",\n        "https://rickandmortyapi.com/api/episode/23",\n        "https://rickandmortyapi.com/api/episode/24",\n        "https://rickandmortyapi.com/api/episode/25",\n        "https://rickandmortyapi.com/api/episode/26",\n        "https://rickandmortyapi.com/api/episode/27",\n        "https://rickandmortyapi.com/api/episode/28",\n        "https://rickandmortyapi.com/api/episode/29",\n        "https://rickandmortyapi.com/api/episode/30",\n        "https://rickandmortyapi.com/api/episode/31",\n        "https://rickandmortyapi.com/api/episode/32",\n        "https://rickandmortyapi.com/api/episode/33",\n        "https://rickandmortyapi.com/api/episode/34",\n        "https://rickandmortyapi.com/api/episode/35",\n        "https://rickandmortyapi.com/api/episode/36",\n        "https://rickandmortyapi.com/api/episode/37",\n        "https://rickandmortyapi.com/api/episode/38",\n        "https://rickandmortyapi.com/api/episode/39",\n        "https://rickandmortyapi.com/api/episode/40",\n        "https://rickandmortyapi.com/api/episode/41",\n        "https://rickandmortyapi.com/api/episode/42",\n        "https://rickandmortyapi.com/api/episode/43",\n        "https://rickandmortyapi.com/api/episode/44",\n        "https://rickandmortyapi.com/api/episode/45",\n        "https://rickandmortyapi.com/api/episode/46",\n        "https://rickandmortyapi.com/api/episode/47",\n        "https://rickandmortyapi.com/api/episode/48",\n        "https://rickandmortyapi.com/api/episode/49",\n        "https://rickandmortyapi.com/api/episode/50",\n        "https://rickandmortyapi.com/api/episode/51"\n    ],\n    "url": "https://rickandmortyapi.com/api/character/1",\n    "created": "2017-11-04T18:48:46.250Z"\n}\n'})}),"\n",(0,r.jsx)(a.h2,{id:"desarollo",children:"Desarollo"}),"\n",(0,r.jsx)(a.admonition,{type:"tip",children:(0,r.jsxs)(a.p,{children:["Esta aplicaci\xf3n har\xe1 uso del ",(0,r.jsx)(a.strong,{children:"hook"})," ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useFetch",children:(0,r.jsx)(a.strong,{children:"useFetch"})}),". Este ",(0,r.jsx)(a.strong,{children:"hook"})," recibe la URL de la API que debe ser consumida y retorna tres campos : ",(0,r.jsx)(a.strong,{children:"data"}),", ",(0,r.jsx)(a.strong,{children:"loading"})," y ",(0,r.jsx)(a.strong,{children:"error"}),"."]})}),"\n",(0,r.jsx)(a.h3,{id:"acciones",children:"Acciones"}),"\n",(0,r.jsxs)(a.p,{children:["Dado que nuestra aplicaci\xf3n har\xe1 uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/frameworks/redux",children:(0,r.jsx)(a.strong,{children:"Redux"})}),", debemos definir las acciones que tendr\xe1."]}),"\n",(0,r.jsxs)(a.p,{children:["Nuestra primera acci\xf3n ser\xe1 ",(0,r.jsx)(a.strong,{children:"OBTENER_PERSONAJES"})," la cu\xe1l hace referencia al consumo de la API que retorna todos los personajes de Rick and Morty. La segunda acci\xf3n es ",(0,r.jsx)(a.strong,{children:"SELECCIONAR_PERSONAJE"})," la cu\xe1l hace referencia al consumo de la API que retorna la informaci\xf3n de un personaje seleccionado."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="actions.js"',children:"export const OBTENER_PERSONAJES = 'OBTENER_PERSONAJES';\nexport const SELECCIONAR_PERSONAJE = 'SELECCIONAR_PERSONAJE';\n\nexport function obtenerPersonajes(personajes) {\n    return {\n        type: OBTENER_PERSONAJES,\n        payload: personajes,\n    }\n}\n\nexport function seleccionarPersonaje(personaje) {\n    return {\n        type: SELECCIONAR_PERSONAJE,\n        payload: personaje,\n    }\n}\n"})}),"\n",(0,r.jsx)(a.p,{children:"Por cada acci\xf3n se dise\xf1\xf3 e implement\xf3 una funci\xf3n. Estas funciones retornan el objeto de la acci\xf3n."}),"\n",(0,r.jsx)(a.h3,{id:"reducers",children:"Reducers"}),"\n",(0,r.jsxs)(a.p,{children:["Dado que nuestra aplicaci\xf3n har\xe1 uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/frameworks/redux",children:(0,r.jsx)(a.strong,{children:"Redux"})}),", debemos definir los reductores que tendr\xe1."]}),"\n",(0,r.jsxs)(a.p,{children:["Esta aplicaci\xf3n tendr\xe1 dos reductores : ",(0,r.jsx)(a.strong,{children:"charactersReducer"})," y ",(0,r.jsx)(a.strong,{children:"characterReducer"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["El reductor ",(0,r.jsx)(a.strong,{children:"charactersReducer"})," se encargar\xe1 de actualizar el estado global de todos los personajes."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="/reducers/charactersReducer.js"',children:"import {OBTENER_PERSONAJES} from '../actions';\n\nconst initialState = { /* initial state */ };\n\nconst charactersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case OBTENER_PERSONAJES:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nexport default charactersReducer;\n"})}),"\n",(0,r.jsxs)(a.p,{children:["El reductor ",(0,r.jsx)(a.strong,{children:"characterReducer"})," se encargar\xe1 de actualizar el estado global del personaje seleccionado."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="/reducers/characterReducer.js"',children:"import {SELECCIONAR_PERSONAJE} from '../actions';\n\nconst initialState = { /* initial state */ };\n\nconst characterReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SELECCIONAR_PERSONAJE:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n}\n\nexport default characterReducer;\n"})}),"\n",(0,r.jsx)(a.p,{children:"Al tener dos reductores debemos combinarlos en uno solo."}),"\n",(0,r.jsxs)(a.p,{children:["El reductor ",(0,r.jsx)(a.strong,{children:"rootReducer"})," es el encargado de combinar los reductores ",(0,r.jsx)(a.strong,{children:"characterReducer"})," y ",(0,r.jsx)(a.strong,{children:"charactersReducer"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="/reducers/rootReducer.js"',children:'import  characterReducer from "./characterReducer";\nimport  charactersReducer  from "./charactersReducer";\nimport { combineReducers } from "redux";\n\nconst rootReducer = combineReducers({\n    character: characterReducer,\n    characters: charactersReducer\n});\n\nexport default rootReducer;\n'})}),"\n",(0,r.jsx)(a.h3,{id:"almac\xe9n",children:"Almac\xe9n"}),"\n",(0,r.jsxs)(a.p,{children:["Dado que nuestra aplicaci\xf3n har\xe1 uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/frameworks/redux",children:(0,r.jsx)(a.strong,{children:"Redux"})}),", debemos definir el almac\xe9n."]}),"\n",(0,r.jsxs)(a.p,{children:["El almac\xe9n ser\xe1 implementado en el archivo ",(0,r.jsx)(a.strong,{children:"main.jsx"})," para que encapsule todo el aplicativo."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="main.jsx"',children:"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\nimport { legacy_createStore as createStore } from 'redux'\n\nlet store = createStore(rootReducer)\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n)\n"})}),"\n",(0,r.jsx)(a.h3,{id:"vistas",children:"Vistas"}),"\n",(0,r.jsxs)(a.p,{children:["La primera vista de nuestra aplicaci\xf3n ser\xe1 ",(0,r.jsx)(a.strong,{children:"App.jsx"}),". En este componente funcional vamos a consumir la API que retorna todos los personajes de Rick & Morty."]}),"\n",(0,r.jsxs)(a.p,{children:["Para consumir la API har\xe1 uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useFetch",children:(0,r.jsx)(a.strong,{children:"useFetch"})})," y actualizar\xe1 el estado global haciendo uso de ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useDispatch",children:(0,r.jsx)(a.strong,{children:"useDispatch"})}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="App.jsx"',children:"import './App.css'\nimport { useFetch } from './useFetch';\nimport { PersonajesList } from './PersonajesList';\nimport { useDispatch } from 'react-redux';\nimport { obtenerPersonajes } from './actions';\n\nfunction App() {\n\n  const { data, loading, error } = useFetch('https://rickandmortyapi.com/api/character')\n  const dispatch = useDispatch();\n\n  if (loading) return <h1>Loading...</h1>\n  if (error) return <h1>Error: {error.message}</h1>\n  if (!data) return <h1>No data found</h1>\n  \n  dispatch(obtenerPersonajes(data.results));\n\n  return (\n   <PersonajesList personajes={data.results}/>\n  )\n}\n\nexport default App\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Con los personajes obtenidos se actualizar\xe1 y llamar\xe1 al componente funcional ",(0,r.jsx)(a.strong,{children:"PersonajesList.jsx"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["El componente funcional ",(0,r.jsx)(a.strong,{children:"PersonajesList.jsx"})," har\xe1 uso del hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useState",children:(0,r.jsx)(a.strong,{children:"useState"})})," y del hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useDispatch",children:(0,r.jsx)(a.strong,{children:"useDispatch"})}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["El hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useDispatch",children:(0,r.jsx)(a.strong,{children:"useDispatch"})})," ser\xe1 disparado cuando seleccionen una de las tarjetas de los personajes (a trav\xe9s del evento ",(0,r.jsx)(a.strong,{children:"onClick"})," del bot\xf3n Seleccionar). La funci\xf3n ",(0,r.jsx)(a.strong,{children:"handleClick"})," es la encargada de capturar el evento ",(0,r.jsx)(a.strong,{children:"onClick"})," y de buscar en la lista de personajes el personaje seleccionado. La lista de personajes llega como par\xe1metro al componente desde ",(0,r.jsx)(a.strong,{children:"App.jsx"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="PersonajesList.jsx**',children:'import Container from \'react-bootstrap/Container\';\nimport Row from \'react-bootstrap/Row\';\nimport Col from \'react-bootstrap/Col\';\nimport Button from \'react-bootstrap/Button\';\nimport Card from \'react-bootstrap/Card\';\nimport { useDispatch} from "react-redux";\nimport { Personaje } from "./Personaje";\nimport { useState } from "react";\n\nexport const PersonajesList = ({personajes}) => {\n\n    const [show, setShow] = useState(false)\n    const dispatch = useDispatch();\n\n    const handleClick = (e) => {\n        const personajeSeleccionadoTemp = personajes.find(personaje => personaje.name === e.target.parentElement.firstChild.innerText);\n        dispatch({ type: \'SELECCIONAR_PERSONAJE\', payload: personajeSeleccionadoTemp });\n        setShow(true);\n    }\n\n    return (\n        personajes.length > 0 ? (\n            <>\n                <Personaje visible={show}/>\n                <Container fluid>\n                    <Row>\n                        {personajes.map((personaje) => (\n                            <Col key={personaje.id}>\n                                <Card key={personaje.id} style={{ width: \'18rem\' }}>\n                                    <Card.Img variant="top" src={personaje.image} />\n                                    <Card.Body>\n                                        <Card.Title>{personaje.name}</Card.Title>\n                                        <Card.Text>\n                                            {personaje.status == "Alive" ? "Vivo" : "Muerto"} - {personaje.species == "Human" ? "Humano" : "Alien"}\n                                        </Card.Text>\n                                        <Button variant="primary" onClick={handleClick}>Seleccionar</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                        )}\n                    </Row>\n                </Container>\n            </>\n        ) :\n            <h1>No hay personajes disponibles</h1>\n\n    )\n}\n'})}),"\n",(0,r.jsxs)(a.p,{children:["La variable ",(0,r.jsx)(a.strong,{children:"show"})," junto a su funci\xf3n ",(0,r.jsx)(a.strong,{children:"setShow"})," permitir\xe1 la visualizaci\xf3n del componente ",(0,r.jsx)(a.strong,{children:"Personaje.jsx"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["El componente ",(0,r.jsx)(a.strong,{children:"Personaje.jsx"})," har\xe1 uso de los hooks ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useEffect",children:(0,r.jsx)(a.strong,{children:"useEffect"})}),", ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useDispatch",children:(0,r.jsx)(a.strong,{children:"useDispatch"})})," y ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useSelector",children:(0,r.jsx)(a.strong,{children:"useSelector"})}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["El hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useSelector",children:(0,r.jsx)(a.strong,{children:"useSelector"})})," nos permitir\xe1 obtener el personaje seleccionado del estado global. En una primera instancia, no existe ning\xfan personaje seleccionado por lo que tampoco ser\xe1 visible el modal."]}),"\n",(0,r.jsxs)(a.p,{children:["Para actualizar el componente funcional hacemos uso del hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useEffect",children:(0,r.jsx)(a.strong,{children:"useEffect"})}),". Teniendo en cuenta que en una primera instancia no tenemos ning\xfan personaje seleccionado y qu\xe9 adicionalmente no es posible llamar en el hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useEffect",children:(0,r.jsx)(a.strong,{children:"useEffect"})})," el hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useFetch",children:(0,r.jsx)(a.strong,{children:"useFetch"})}),", en la implementaci\xf3n de la funci\xf3n hacemos el llamado a la API a trav\xe9s de ",(0,r.jsx)(a.strong,{children:"fetch"}),". Cuando se obtiene la informaci\xf3n del personaje seleccionado de la API se dispar\xe1 la actualizaci\xf3n del estado global a tr\xe1ves del hook ",(0,r.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useDispatch",children:(0,r.jsx)(a.strong,{children:"useDispatch"})}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["La funci\xf3n ",(0,r.jsx)(a.strong,{children:"handleClose"})," nos permite actualizar el valor del par\xe1metro ",(0,r.jsx)(a.strong,{children:"visible"})," que habilita o no la visualizaci\xf3n del modal."]}),"\n",(0,r.jsxs)(a.admonition,{type:"tip",children:[(0,r.jsx)(a.p,{children:"Hay varios eventos que se activan cuando un modal se cierra. Cada evento se activa despu\xe9s de un cambio de fase espec\xedfico que el modal experimenta. Este cambio de fase suele ser una etapa de transici\xf3n en todo su ciclo de vida. Estas etapas pueden ser accesibles pasando propiedades espec\xedficas al modal e invocando una funci\xf3n de devoluci\xf3n de llamada."}),(0,r.jsxs)(a.p,{children:["Cuando el modal empieza a salir de la p\xe1gina, primero se activa la funci\xf3n de retorno ",(0,r.jsx)(a.strong,{children:"onExiting()"}),", seguida de la funci\xf3n de retorno ",(0,r.jsx)(a.strong,{children:"onExited()"})," cuando el modal termina de salir. Finalmente, se activa la funci\xf3n de retorno ",(0,r.jsx)(a.strong,{children:"onExit()"}),", indicando que el modal ha salido completamente de la p\xe1gina."]}),(0,r.jsxs)(a.p,{children:["Otra funci\xf3n que se activa cuando haces clic en el \xedcono de cerrar del ",(0,r.jsx)(a.strong,{children:"modal"})," o haces clic en cualquier lugar del fondo fuera del modal es ",(0,r.jsx)(a.strong,{children:"onHide()"}),"."]})]}),"\n",(0,r.jsxs)(a.p,{children:["Dado que existen unas funciones previas a la ejecuci\xf3n del evento ",(0,r.jsx)(a.strong,{children:"onHide()"}),", se ve la necesidad de forzar la actualizaci\xf3n del componente a trav\xe9s de la funci\xf3n ",(0,r.jsx)(a.strong,{children:"reload()"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:'title="Personaje.jsx"',children:"import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport const Personaje = ({ visible }) => {\n\n  const personaje = useSelector(state => state.character);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (personaje && personaje.id) {\n      const url = 'https://rickandmortyapi.com/api/character/' + personaje.id;\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Personaje cargado:', data);\n        dispatch({ type: 'SELECCIONAR_PERSONAJE', payload: data });\n      }).catch(error => {\n        console.error('Error al cargar el personaje:', error);\n      })\n    }\n  }, [visible]);\n\n \n  const handleClose = () => {\n    visible = false;\n    reload();\n  }\n\n  const reload=()=>window.location.reload();\n\n  return (\n    <Modal show={visible} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{personaje.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <img src={personaje.image} alt={personaje.name} style={{ width: '50%' }} />\n        <p><strong>Estado:</strong> {personaje.status == 'Alive' ? 'Vivo' : 'Muerto'}</p>\n        <p><strong>Especie:</strong> {personaje.species == \"Human\" ? \"Humano\" : \"Alien\"}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cerrar\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n"})}),"\n",(0,r.jsxs)(a.admonition,{type:"tip",children:[(0,r.jsxs)(a.p,{children:["Notaran que la implementaci\xf3n se complica un poco dado que nuestras funciones ",(0,r.jsx)(a.strong,{children:"dispatch"})," no permiten el llamado as\xedncrono a las API's."]}),(0,r.jsxs)(a.p,{children:["Adicionalmente, el componente padre ",(0,r.jsx)(a.strong,{children:"App.jsx"})," debe solicitarle a ",(0,r.jsx)(a.strong,{children:"PersonajesLists.jsx"})," su actualizaci\xf3n, y asi mismo, el componente ",(0,r.jsx)(a.strong,{children:"PersonajesList.jsx"})," debe solicitar la actualizaci\xf3n de ",(0,r.jsx)(a.strong,{children:"Personaje.jsx"}),". Esto obliga el uso de par\xe1metros que refresquen cada componente hijo."]})]}),"\n",(0,r.jsx)(a.h2,{id:"resultado-final",children:"Resultado final"}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Rick and Morty 1",src:n(5326).A+"",width:"1114",height:"632"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Rick and Morty 1",src:n(7125).A+"",width:"1121",height:"611"})})]})}function l(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>t});var o=n(6540);const r={},s=o.createContext(r);function i(e){const a=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:a},e.children)}}}]);