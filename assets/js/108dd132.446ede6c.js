"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[1630],{624:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"reactjs/ciclo-vida","title":"11. Ciclo de vida","description":"\xbfQu\xe9 es renderizar un componente? \xbfCada cu\xe1nto se renderiza?","source":"@site/docs/reactjs/ciclo-vida.md","sourceDirName":"reactjs","slug":"/reactjs/ciclo-vida","permalink":"/cursos/docs/reactjs/ciclo-vida","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/reactjs/ciclo-vida.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"createRoot","permalink":"/cursos/docs/tags/about-createRoot","description":"Tutoriales donde se menciona la palabra componente createRoot"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"useState","permalink":"/cursos/docs/tags/about-useState","description":"Tutoriales donde se menciona la palabra useState"}],"version":"current","lastUpdatedBy":"jeysongarcia","lastUpdatedAt":1745522515000,"sidebarPosition":11,"frontMatter":{"id":"ciclo-vida","title":"11. Ciclo de vida","sidebar_position":11,"author":"jeogarod","description":"\xbfQu\xe9 es renderizar un componente? \xbfCada cu\xe1nto se renderiza?","tags":["react","reactjs","createRoot","npm","vite","useState"]},"sidebar":"tutorialSidebar","previous":{"title":"10. useState","permalink":"/cursos/docs/reactjs/useState"},"next":{"title":"Tutoriales","permalink":"/cursos/docs/intro"}}');var t=a(4848),r=a(8453);const s={id:"ciclo-vida",title:"11. Ciclo de vida",sidebar_position:11,author:"jeogarod",description:"\xbfQu\xe9 es renderizar un componente? \xbfCada cu\xe1nto se renderiza?",tags:["react","reactjs","createRoot","npm","vite","useState"]},i="Ciclo de vida",c={},d=[{value:"Renderizado",id:"renderizado",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ciclo-de-vida",children:"Ciclo de vida"})}),"\n",(0,t.jsx)(n.h2,{id:"renderizado",children:"Renderizado"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Renderizado"})," significa que React est\xe1 llamando a tu componente, que es una funci\xf3n. El ",(0,t.jsx)(n.strong,{children:"JSX"})," que devuelves de esa funci\xf3n es como una ",(0,t.jsx)(n.strong,{children:"instant\xe1nea de la UI en el tiempo"}),". Tus props, controladores de eventos y variables locales fueron todos calculados usando su estado en el momento del renderizado."]})}),"\n",(0,t.jsxs)(n.p,{children:["Teniendo en cuenta la definici\xf3n de ",(0,t.jsx)(n.strong,{children:"renderizado"}),", vamos a explicar qu\xe9 significa el renderizado inicial y qu\xe9 sucede despu\xe9s de dicho renderizado."]}),"\n",(0,t.jsxs)(n.p,{children:["El ",(0,t.jsx)(n.strong,{children:"renderizado inicial"})," es el cargue inicial de un ",(0,t.jsx)(n.strong,{children:"componente funcional"})," y/o ",(0,t.jsx)(n.strong,{children:"componente de clase"}),". Frameworks y sandboxes a veces ocultan este c\xf3digo, pero se hace con una llamada a ",(0,t.jsx)(n.strong,{children:"createRoot"})," con el nodo ",(0,t.jsx)(n.strong,{children:"DOM"})," de destino, y luego con otra llamada a su m\xe9todo ",(0,t.jsx)(n.strong,{children:"render"})," con tu componente."]}),"\n",(0,t.jsxs)(n.p,{children:["Por ejemplo, Cuando creamos un aplicativo y/o proyecto ",(0,t.jsx)(n.strong,{children:"React"})," haciendo uso de ",(0,t.jsx)(n.strong,{children:"Vite"}),", se crea un archivo ",(0,t.jsx)(n.strong,{children:"/src/main.jsx"})," el cu\xe1l invoca la funci\xf3n ",(0,t.jsx)(n.strong,{children:"createRoot"})," y ",(0,t.jsx)(n.strong,{children:"render"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/main.jsx"',children:"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { Carro } from './ComponenteApp'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n\n  </StrictMode>,\n)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Una vez que el componente ha sido renderizado inicialmente, puede desencadenar m\xe1s renderizados ",(0,t.jsx)(n.strong,{children:"actualizando su estado"})," con la funci\xf3n ",(0,t.jsx)(n.strong,{children:"set"}),". Al actualizar el estado de tu componente, se pone en cola autom\xe1ticamente un renderizado. Recordemos que la funci\xf3n ",(0,t.jsx)(n.strong,{children:"set"})," hace parte de la definici\xf3n de ",(0,t.jsx)(n.a,{href:"./useState",children:"10. useState"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Este proceso es recursivo: si el componente actualizado devuelve alg\xfan otro componente, React renderizar\xe1 ese componente a continuaci\xf3n, y si ese componente tambi\xe9n devuelve algo, renderizar\xe1 ese componente a continuaci\xf3n, y as\xed sucesivamente. El proceso continuar\xe1 hasta que no haya m\xe1s componentes anidados y React sepa exactamente qu\xe9 debe mostrarse en pantalla."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Para el renderizado inicial, React utilizar\xe1 la API del DOM ",(0,t.jsx)(n.strong,{children:"appendChild()"})," para poner en pantalla todos los nodos del DOM que ha creado."]}),"\n",(0,t.jsx)(n.li,{children:"React s\xf3lo cambia los nodos del DOM si hay una diferencia entre los renderizados."}),"\n",(0,t.jsx)(n.li,{children:"Despu\xe9s de que el renderizado haya terminado y React haya actualizado el DOM, el navegador volver\xe1 a pintar la pantalla"}),"\n"]})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var o=a(6540);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);