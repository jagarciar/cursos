"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[4467],{2906:e=>{e.exports=JSON.parse('{"tag":{"label":"useState","permalink":"/cursos/docs/tags/about-useState","description":"Tutoriales donde se menciona la palabra useState","allTagsPath":"/cursos/docs/tags","count":9,"items":[{"id":"programacion/reactjs/hooks/intro-hooks","title":"1. Introducci\xf3n","description":"En React los hooks permiten administrar el estado y otras funciones sin tener que escribir una clase.","permalink":"/cursos/docs/programacion/reactjs/hooks/intro-hooks"},{"id":"programacion/reactjs/hooks/useLocalStorage","title":"10. useLocalStorage","description":"useLocalStorage es un hook de ReactJS que permite estandarizar el almacenamiento local o en cach\xe9 de las variables de estado o de los elementos HTML","permalink":"/cursos/docs/programacion/reactjs/hooks/useLocalStorage"},{"id":"programacion/reactjs/hooks/useState","title":"2. useState","description":"useState es un hook en ReactJS que permite gestionar el estado de un componente","permalink":"/cursos/docs/programacion/reactjs/hooks/useState"},{"id":"programacion/reactjs/frameworks/redux","title":"3. Redux","description":"Redux","permalink":"/cursos/docs/programacion/reactjs/frameworks/redux"},{"id":"programacion/reactjs/proyecto/eventos","title":"6. Eventos","description":"\xbfC\xf3mo ReactJS actua antes los diversos eventos de una sitio web?","permalink":"/cursos/docs/programacion/reactjs/proyecto/eventos"},{"id":"programacion/reactjs/hooks/useForm","title":"7. useForm","description":"useForm es un hook de ReactJS que nos apoya durante la gesti\xf3n del estado de un formulario","permalink":"/cursos/docs/programacion/reactjs/hooks/useForm"},{"id":"programacion/reactjs/hooks/useReducer","title":"7. useReducer","description":"useReducer es un hook en ReactJS que permite gestionar el estado de un componente","permalink":"/cursos/docs/programacion/reactjs/hooks/useReducer"},{"id":"programacion/reactjs/hooks/useCounter","title":"8. useCounter","description":"useCounter es un hook en ReactJS que permite estandarizar el uso de contadores en los componentes","permalink":"/cursos/docs/programacion/reactjs/hooks/useCounter"},{"id":"programacion/reactjs/hooks/useFetch","title":"9. useFetch","description":"useFetch es un hook de ReactJS que permite invocar o consumir API\'s","permalink":"/cursos/docs/programacion/reactjs/hooks/useFetch"}],"unlisted":false}}')}}]);