"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[3556],{8623:e=>{e.exports=JSON.parse('{"tag":{"label":"hooks","permalink":"/cursos/docs/tags/about-hooks","description":"Tutoriales donde se menciona la palabra hooks","allTagsPath":"/cursos/docs/tags","count":11,"items":[{"id":"reactjs/hooks/intro-hooks","title":"1. Introducci\xf3n","description":"En React los hooks permiten administrar el estado y otras funciones sin tener que escribir una clase.","permalink":"/cursos/docs/reactjs/hooks/intro-hooks"},{"id":"reactjs/hooks/useLocalStorage","title":"10. useLocalStorage","description":"useLocalStorage es un hook de ReactJS que permite estandarizar el almacenamiento local o en cach\xe9 de las variables de estado o de los elementos HTML","permalink":"/cursos/docs/reactjs/hooks/useLocalStorage"},{"id":"reactjs/hooks/useState","title":"2. useState","description":"useState es un hook en ReactJS que permite gestionar el estado de un componente","permalink":"/cursos/docs/reactjs/hooks/useState"},{"id":"reactjs/hooks/useEffect","title":"3. useEffect","description":"useEffect es un hook en ReactJS que permite ejecutar una funci\xf3n despu\xe9s del renderizado de un componente","permalink":"/cursos/docs/reactjs/hooks/useEffect"},{"id":"reactjs/hooks/useRef","title":"4. useRef","description":"useRef es un hook en ReactJS que permite obtener una referencia a un elemento del DOM","permalink":"/cursos/docs/reactjs/hooks/useRef"},{"id":"reactjs/hooks/useMemo","title":"5. useMemo","description":"useMemo es un hook en ReactJS que permite memorizar el valor de una variable de estado","permalink":"/cursos/docs/reactjs/hooks/useMemo"},{"id":"reactjs/hooks/useCallback","title":"6. useCallback","description":"El hook useCallback permite memorizar una funci\xf3n en un contexto ReactJS","permalink":"/cursos/docs/reactjs/hooks/useCallback"},{"id":"reactjs/hooks/useForm","title":"7. useForm","description":"useForm es un hook de ReactJS que nos apoya durante la gesti\xf3n del estado de un formulario","permalink":"/cursos/docs/reactjs/hooks/useForm"},{"id":"reactjs/hooks/useReducer","title":"7. useReducer","description":"useReducer es un hook en ReactJS que permite gestionar el estado de un componente","permalink":"/cursos/docs/reactjs/hooks/useReducer"},{"id":"reactjs/hooks/useCounter","title":"8. useCounter","description":"useCounter es un hook en ReactJS que permite estandarizar el uso de contadores en los componentes","permalink":"/cursos/docs/reactjs/hooks/useCounter"},{"id":"reactjs/hooks/useFetch","title":"9. useFetch","description":"useFetch es un hook de ReactJS que permite invocar o consumir API\'s","permalink":"/cursos/docs/reactjs/hooks/useFetch"}],"unlisted":false}}')}}]);