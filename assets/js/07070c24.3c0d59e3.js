"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[5166],{5084:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"programacion/reactjs/frameworks/react-query","title":"React Query","description":"En este tutorial vamos aprender a usar React Query en un proyecto ReactJS","source":"@site/docs/programacion/reactjs/frameworks/react-query.md","sourceDirName":"programacion/reactjs/frameworks","slug":"/programacion/reactjs/frameworks/react-query","permalink":"/cursos/docs/programacion/reactjs/frameworks/react-query","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/programacion/reactjs/frameworks/react-query.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"createRoot","permalink":"/cursos/docs/tags/about-createRoot","description":"Tutoriales donde se menciona la palabra createRoot"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"Redux","permalink":"/cursos/docs/tags/about-redux","description":"Tutoriales donde se menciona la palabra redux"},{"inline":false,"label":"Estado","permalink":"/cursos/docs/tags/about-estado","description":"Tutoriales donde se menciona la palabra estado"},{"inline":false,"label":"flux","permalink":"/cursos/docs/tags/about-flux","description":"Tutoriales donde se menciona la palabra flux"},{"inline":false,"label":"useQuery","permalink":"/cursos/docs/tags/about-useQuery","description":"Tutoriales donde se menciona la palabra useQuery"},{"inline":false,"label":"React Query","permalink":"/cursos/docs/tags/about-react-query","description":"Tutoriales donde se menciona la palabra React Query"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1750204800000,"sidebarPosition":6,"frontMatter":{"id":"react-query","Title":"React Query","description":"En este tutorial vamos aprender a usar React Query en un proyecto ReactJS","sidebar_position":6,"author":"jeogarod","tags":["react","reactjs","createRoot","npm","vite","redux","estado","flux","useQuery","react-query"],"last_update":{"date":"06/18/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"React Bootstrap","permalink":"/cursos/docs/programacion/reactjs/frameworks/react-bootstrap"},"next":{"title":"Ejemplos","permalink":"/cursos/docs/reactjs/ejemplos"}}');var t=r(4848),o=r(8453);const n={id:"react-query",Title:"React Query",description:"En este tutorial vamos aprender a usar React Query en un proyecto ReactJS",sidebar_position:6,author:"jeogarod",tags:["react","reactjs","createRoot","npm","vite","redux","estado","flux","useQuery","react-query"],last_update:{date:"06/18/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},c="React Query",i={},l=[];function d(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"react-query",children:"React Query"})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"React Query"}),", a menudo llamado ",(0,t.jsx)(a.strong,{children:"TanStack Query"})," debido a su fusi\xf3n con el ecosistema ",(0,t.jsx)(a.strong,{children:"TANStack"})," (TAN: Tailwind CSS, Alpine.js y Nuxt.js), es una biblioteca de ",(0,t.jsx)(a.strong,{children:"administraci\xf3n de estado"})," y ",(0,t.jsx)(a.strong,{children:"recuperaci\xf3n de datos"})," que simplifica enormemente el proceso de manejar ",(0,t.jsx)(a.strong,{children:"informaci\xf3n as\xedncrona"})," en aplicaciones React. A diferencia de otros enfoques m\xe1s tradicionales, ",(0,t.jsx)(a.strong,{children:"React Query"})," abraza la asincron\xeda y promueve la obtenci\xf3n de datos en tiempo real de manera eficiente."]}),"\n",(0,t.jsxs)(a.admonition,{type:"tip",children:[(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"React Query"})," se instala a trav\xe9s de la ejecuci\xf3n del siguiente comando :"]}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-javascript",children:"npm install @tanstack/react-query\n"})})]}),"\n",(0,t.jsxs)(a.p,{children:["Cuando utilizas ",(0,t.jsx)(a.strong,{children:"React Query"}),", las respuestas de las consultas (queries) a APIs o servicios externos se almacenan autom\xe1ticamente en una ",(0,t.jsx)(a.strong,{children:"cach\xe9 local"}),". La pr\xf3xima vez que realices la misma consulta, ",(0,t.jsx)(a.strong,{children:"React Query"})," buscar\xe1 primero en la ",(0,t.jsx)(a.strong,{children:"cach\xe9"})," para obtener los datos en lugar de hacer una nueva solicitud al servidor. Esto reduce el tr\xe1fico de red y mejora el rendimiento de la aplicaci\xf3n al mostrar datos de forma instant\xe1nea."]}),"\n",(0,t.jsxs)(a.p,{children:["La ",(0,t.jsx)(a.strong,{children:"cach\xe9"})," de ",(0,t.jsx)(a.strong,{children:"React Query"})," est\xe1 dise\xf1ada de manera inteligente y se actualiza autom\xe1ticamente para mantener los datos frescos. Cuando se realiza una consulta, ",(0,t.jsx)(a.strong,{children:"React Query"})," marca los datos almacenados en ",(0,t.jsx)(a.strong,{children:"cach\xe9"})," como ",(0,t.jsx)(a.strong,{children:"stale"})," (",(0,t.jsx)(a.strong,{children:"caducados"}),") y luego realiza una nueva solicitud al servidor para obtener los datos actualizados. Esto permite que la interfaz de usuario muestre datos precisos y actualizados sin la necesidad de realizar peticiones adicionales manualmente."]}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"React Query"})," maneja autom\xe1ticamente los estados de carga, \xe9xito o error de las peticiones. Cuando realizas una consulta con ",(0,t.jsx)(a.a,{href:"/cursos/docs/programacion/reactjs/hooks/useQuery",children:(0,t.jsx)(a.strong,{children:"useQuery"})}),", ",(0,t.jsx)(a.strong,{children:"React Query"})," establece autom\xe1ticamente el estado de ",(0,t.jsx)(a.strong,{children:"isLoading"})," mientras se est\xe1 realizando la consulta. Una vez que la consulta se completa con \xe9xito, los datos se almacenan en el estado ",(0,t.jsx)(a.strong,{children:"data"}),". En caso de error, el estado ",(0,t.jsx)(a.strong,{children:"isError"})," se establece para manejar errores de red u otros problemas."]})})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>n,x:()=>c});var s=r(6540);const t={},o=s.createContext(t);function n(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);