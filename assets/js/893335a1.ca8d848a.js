"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[8630],{3985:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"programacion/reactjs/frameworks/redux","title":"3. Redux","description":"Redux","source":"@site/docs/programacion/reactjs/frameworks/redux.md","sourceDirName":"programacion/reactjs/frameworks","slug":"/programacion/reactjs/frameworks/redux","permalink":"/cursos/docs/programacion/reactjs/frameworks/redux","draft":false,"unlisted":false,"editUrl":"https://github.com/jagarciar/cursos/tree/main/docs/programacion/reactjs/frameworks/redux.md","tags":[{"inline":false,"label":"React","permalink":"/cursos/docs/tags/about-react","description":"Tutoriales donde se menciona la palabra react"},{"inline":false,"label":"React JS","permalink":"/cursos/docs/tags/about-react-js","description":"Tutoriales donde se menciona la palabra reactjs"},{"inline":false,"label":"createRoot","permalink":"/cursos/docs/tags/about-createRoot","description":"Tutoriales donde se menciona la palabra createRoot"},{"inline":false,"label":"NPM","permalink":"/cursos/docs/tags/about-npm","description":"Tutoriales donde se menciona la palabra npm"},{"inline":false,"label":"Vite","permalink":"/cursos/docs/tags/about-vite","description":"Tutoriales donde se menciona la palabra vite"},{"inline":false,"label":"Redux","permalink":"/cursos/docs/tags/about-redux","description":"Tutoriales donde se menciona la palabra redux"},{"inline":false,"label":"Estado","permalink":"/cursos/docs/tags/about-estado","description":"Tutoriales donde se menciona la palabra estado"},{"inline":false,"label":"flux","permalink":"/cursos/docs/tags/about-flux","description":"Tutoriales donde se menciona la palabra flux"},{"inline":false,"label":"useState","permalink":"/cursos/docs/tags/about-useState","description":"Tutoriales donde se menciona la palabra useState"},{"inline":false,"label":"useReducer","permalink":"/cursos/docs/tags/about-useReducer","description":"Tutoriales donde se menciona la palabra useReducer"},{"inline":false,"label":"useSelector","permalink":"/cursos/docs/tags/about-useSelector","description":"Tutoriales donde se menciona la palabra useSelector"},{"inline":false,"label":"useDispatch","permalink":"/cursos/docs/tags/about-useDispatch","description":"Tutoriales donde se menciona la palabra useDispatch"}],"version":"current","lastUpdatedBy":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez","lastUpdatedAt":1738713600000,"sidebarPosition":3,"frontMatter":{"id":"redux","Title":"3. Redux","description":"Redux","sidebar_position":3,"author":"jeogarod","tags":["react","reactjs","createRoot","npm","vite","redux","estado","flux","useState","useReducer","useSelector","useDispatch"],"last_update":{"date":"02/05/2025","author":"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},"sidebar":"tutorialSidebar","previous":{"title":"2. CSS","permalink":"/cursos/docs/programacion/reactjs/frameworks/css"}}');var a=s(4848),t=s(8453);const i={id:"redux",Title:"3. Redux",description:"Redux",sidebar_position:3,author:"jeogarod",tags:["react","reactjs","createRoot","npm","vite","redux","estado","flux","useState","useReducer","useSelector","useDispatch"],last_update:{date:"02/05/2025",author:"Jeyson Andr\xe9s Garc\xeda Rodr\xedguez"}},o="3. Redux",c={},d=[{value:"Acciones",id:"acciones",level:2},{value:"Reducers",id:"reducers",level:2},{value:"Almac\xe9n",id:"almac\xe9n",level:2},{value:"Vista",id:"vista",level:2},{value:"useSelector",id:"useselector",level:3},{value:"useDispatch",id:"usedispatch",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"3-redux",children:"3. Redux"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Redux"})," es un contenedor de estado para aplicaciones JavaScript especialmente \xfatil en el contexto de aplicaciones de ",(0,a.jsx)(n.strong,{children:"React"}),". Fue dise\xf1ado para gestionar el ",(0,a.jsx)(n.strong,{children:"estado"})," de la aplicaci\xf3n de una manera predecible y centralizada."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Redux"})," es la implementaci\xf3n del ",(0,a.jsx)(n.strong,{children:"patr\xf3n de arquitectura de datos"})," ",(0,a.jsx)(n.a,{href:"/cursos/docs/arquitectura/patrones/flux",children:(0,a.jsx)(n.strong,{children:"flux"})})," que permite manejar el ",(0,a.jsx)(n.strong,{children:"estado de la aplicaci\xf3n"})," de una manera predecible. Est\xe1 pensado para reducir el n\xfamero de relaciones entre componentes de la aplicaci\xf3n y mantener un flujo de datos sencillo."]})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Redux"})," esta basado en:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"El estado de toda tu aplicaci\xf3n esta almacenado en un \xe1rbol guardado en un \xfanico store."}),"\n",(0,a.jsx)(n.li,{children:"La \xfanica forma de modificar el estado es emitiendo una acci\xf3n, un objeto describiendo que ocurri\xf3."}),"\n",(0,a.jsxs)(n.li,{children:["Para especificar como el \xe1rbol de estado es transformado por las acciones, se utilizan ",(0,a.jsx)(n.strong,{children:"reducers"})," puros."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Tengamos en cuenta que :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["A diferencia de ",(0,a.jsx)(n.a,{href:"/cursos/docs/arquitectura/patrones/flux",children:(0,a.jsx)(n.strong,{children:"Flux"})}),", en ",(0,a.jsx)(n.strong,{children:"Redux"})," no existe el concepto de ",(0,a.jsx)(n.strong,{children:"Dispatcher"}),". Esto es porque se basa en funciones puras en vez de emisores de ventos, y las funciones puras son f\xe1ciles de componer y no necesitan entidades adicionales para controlarlas"]}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"React"})," proporciona su propio sistema de gesti\xf3n de estado local (",(0,a.jsx)(n.a,{href:"/cursos/docs/programacion/reactjs/hooks/useState",children:(0,a.jsx)(n.strong,{children:"useState"})})," ",(0,a.jsx)(n.a,{href:"/cursos/docs/programacion/reactjs/hooks/useReducer",children:(0,a.jsx)(n.strong,{children:"useReducer"})}),"), pero cuando la aplicaci\xf3n crece en complejidad y varias partes de la interfaz de usuario necesitan acceder al mismo estado, ",(0,a.jsx)(n.strong,{children:"Redux"})," puede ser una soluci\xf3n eficaz."]}),(0,a.jsxs)(n.p,{children:["La instalaci\xf3n de ",(0,a.jsx)(n.strong,{children:"Redux"})," se da a trav\xe9s del comando"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"npm install redux\nnpm install react-redux\n"})})]}),"\n",(0,a.jsx)(n.h2,{id:"acciones",children:"Acciones"}),"\n",(0,a.jsxs)(n.p,{children:["Las ",(0,a.jsx)(n.strong,{children:"acciones"})," son un ",(0,a.jsx)(n.strong,{children:"bloque de informaci\xf3n"})," que envia datos desde la aplicaci\xf3n al ",(0,a.jsx)(n.strong,{children:"almac\xe9n"}),", son la \xfanica fuente de informaci\xf3n y se envian usando ",(0,a.jsx)(n.strong,{children:"store.dispatch()"}),"."]}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["Las ",(0,a.jsx)(n.strong,{children:"acciones"})," son ",(0,a.jsx)(n.strong,{children:"objetos planos de JavaScript"}),". Una ",(0,a.jsx)(n.strong,{children:"acci\xf3n"})," debe tener una propiedad ",(0,a.jsx)(n.strong,{children:"type"})," que indica el ",(0,a.jsx)(n.strong,{children:"tipo de acci\xf3n"})," a realizar. Los ",(0,a.jsx)(n.strong,{children:"tipos"})," normalmente son definidos como strings constantes."]}),(0,a.jsxs)(n.p,{children:["Opcionalmente (pero preferiblemente) se pueden crear ",(0,a.jsx)(n.strong,{children:"funciones"})," que retornen un ",(0,a.jsx)(n.strong,{children:"tipo de acci\xf3n"}),"."]})]}),"\n",(0,a.jsxs)(n.p,{children:["Para nuestro ejemplo vamos a crear el tipo de acci\xf3n ",(0,a.jsx)(n.strong,{children:"ADD_ESTUDIANTE"})," el cu\xe1l tendr\xe1 definida una ",(0,a.jsx)(n.strong,{children:"funci\xf3n"})," ",(0,a.jsx)(n.em,{children:"creadora de la acci\xf3n"})," ",(0,a.jsx)(n.strong,{children:"addEstudiante"})," que retornar\xe1 el tipo de acci\xf3n ",(0,a.jsx)(n.strong,{children:"ADD_ESTUDIANTE"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/acciones.js"',children:"export const ADD_ESTUDIANTE = 'ADD_ESTUDIANTE'\n\nexport function addEstudiante(estudiante){\n    return {\n        type : ADD_ESTUDIANTE, \n        payload : estudiante\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"reducers",children:"Reducers"}),"\n",(0,a.jsxs)(n.p,{children:["Las ",(0,a.jsx)(n.strong,{children:"acciones"})," ",(0,a.jsx)(n.em,{children:"describen que algo pas\xf3"}),", pero ",(0,a.jsx)(n.em,{children:"no especifican c\xf3mo cambi\xf3 el estado de la aplicaci\xf3n en respuesta"}),". Esto es trabajo de los ",(0,a.jsx)(n.strong,{children:"reducers"}),". El ",(0,a.jsx)(n.strong,{children:"reducer"})," es una ",(0,a.jsx)(n.strong,{children:"funci\xf3n pura"})," que toma el ",(0,a.jsx)(n.strong,{children:"estado anterior"})," y una ",(0,a.jsx)(n.strong,{children:"acci\xf3n"}),", y devuelve en ",(0,a.jsx)(n.strong,{children:"nuevo estado"}),"."]}),"\n",(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsx)(n.p,{children:"\xbfQu\xe9 nunca deber\xedas hacer dentron de un reducer?"}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Modificar sus argumentos"}),"\n",(0,a.jsx)(n.li,{children:"Realizar tareas con efectos secundarios como llamas a un API o transiciones de rutas"}),"\n",(0,a.jsx)(n.li,{children:"Llamar una funci\xf3n no pura, por ejemplo Date.now() o Math.random()."}),"\n"]})]}),"\n",(0,a.jsxs)(n.p,{children:["En el siguiente ejemplo creamos un objeto ",(0,a.jsx)(n.strong,{children:"initialState"})," que contendr\xe1 el ",(0,a.jsx)(n.strong,{children:"modelo"})," de la aplicaci\xf3n y una funci\xf3n ",(0,a.jsx)(n.strong,{children:"estudiantesReducer"}),", el cu\xe1l ser\xe1 nuestro ",(0,a.jsx)(n.strong,{children:"reducer"}),". La funci\xf3n recibe un par\xe1metro ",(0,a.jsx)(n.strong,{children:"state"})," que contendr\xe1 el ",(0,a.jsx)(n.strong,{children:"estado anterior"})," y un par\xe1metro ",(0,a.jsx)(n.strong,{children:"action"})," que contendr\xe1 la ",(0,a.jsx)(n.strong,{children:"acci\xf3n"}),". El par\xe1metro ",(0,a.jsx)(n.strong,{children:"action"})," contendr\xe1 dos campos : ",(0,a.jsx)(n.strong,{children:"type"})," almacenar\xe1 el ",(0,a.jsx)(n.strong,{children:"tipo de acci\xf3n"})," y ",(0,a.jsx)(n.strong,{children:"payload"})," contendr\xe1 el contenido de la acci\xf3n."]}),"\n",(0,a.jsxs)(n.p,{children:["En este ejemplo queremos adicionar un nuevo estudiante a la lista de estudiantes definida en ",(0,a.jsx)(n.strong,{children:"initialState.estudiantes"}),". Para ellos, se defini\xf3 el tipo de acci\xf3n ",(0,a.jsx)(n.strong,{children:"ADD_ESTUDIANTE"}),". Cuando invocan al ",(0,a.jsx)(n.strong,{children:"reducer"})," y envian ",(0,a.jsx)(n.strong,{children:"action.type = ADD_ESTUDIANTE"}),", se hace uso del ",(0,a.jsx)(n.strong,{children:"operador spread (...)"}),", el cu\xe1l permite expandir elementos de arrays y objetos obteniendo sus elementos individuales."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/reducer.js"',children:'import { ADD_ESTUDIANTE } from "./acciones"\n\nexport const initialState = {\n    estudiantes: [\n    ]\n}\n\nfunction estudiantesReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_ESTUDIANTE:\n            return {\n                estudiantes: [\n                  ...state.estudiantes,\n                  action.payload\n                ]\n              }   \n        default:\n            return state\n    }\n}\n\nexport default estudiantesReducer\n'})}),"\n",(0,a.jsx)(n.h2,{id:"almac\xe9n",children:"Almac\xe9n"}),"\n",(0,a.jsxs)(n.p,{children:["Previamente definimos las ",(0,a.jsx)(n.strong,{children:"acciones"})," que representan los ",(0,a.jsx)(n.strong,{children:"hechos"}),' sobre "lo que pas\xf3" y los ',(0,a.jsx)(n.strong,{children:"reductores"})," son los que ",(0,a.jsx)(n.strong,{children:"actualizan"})," el ",(0,a.jsx)(n.strong,{children:"estado"})," de acuerdo a esas ",(0,a.jsx)(n.strong,{children:"acciones"}),". El ",(0,a.jsx)(n.strong,{children:"almac\xe9n"})," es el objeto que los re\xfane y tiene las siguientes responsabilidades:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Contiene el estado de la aplicaci\xf3n;"}),"\n",(0,a.jsxs)(n.li,{children:["Permite el acceso al estado via ",(0,a.jsx)(n.strong,{children:"getState()"})]}),"\n",(0,a.jsxs)(n.li,{children:["Permite que el estado sea actualizado via ",(0,a.jsx)(n.strong,{children:"dispatch(action)"})]}),"\n",(0,a.jsxs)(n.li,{children:["Registra los listeners via ",(0,a.jsx)(n.strong,{children:"subscribe(listener)"})]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Es importante destacar que s\xf3lo tendr\xe1s un store en una aplicaci\xf3n ",(0,a.jsx)(n.strong,{children:"Redux"}),". Cuando se desea dividir la l\xf3gica para el manejo de datos, se debe usar la ",(0,a.jsx)(n.strong,{children:"composici\xf3n de reductores"})," en lugar de muchos stores."]})}),"\n",(0,a.jsxs)(n.p,{children:["El ",(0,a.jsx)(n.strong,{children:"almac\xe9n"})," debe ser definido y creado en ",(0,a.jsx)(n.strong,{children:"main.jsx"})," y debe ser enviado como par\xe1metro sobre el elemento ",(0,a.jsx)(n.strong,{children:"Provider"})," como se muestra a continuaci\xf3n:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/main.jsx"',children:"import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport { ReduxApp } from './ReduxApp.jsx'\nimport { Provider } from 'react-redux'\nimport { legacy_createStore as createStore } from 'redux'\nimport estudiantesReducer, { initialState } from './reducer'\n\nlet store = createStore(estudiantesReducer, initialState)\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <Provider store={store}>\n      <ReduxApp />\n    </Provider>\n  </StrictMode>,\n)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"vista",children:"Vista"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Antes de la introducci\xf3n de ",(0,a.jsx)(n.strong,{children:"Redux Hooks"}),", como ",(0,a.jsx)(n.strong,{children:"useDispatch"})," en ",(0,a.jsx)(n.strong,{children:"React Redux"})," y ",(0,a.jsx)(n.strong,{children:"useSelector"}),", los desarrolladores sol\xedan utilizar la funci\xf3n ",(0,a.jsx)(n.strong,{children:"connect"})," para conectar ",(0,a.jsx)(n.strong,{children:"componentes"})," de ",(0,a.jsx)(n.strong,{children:"React"})," al ",(0,a.jsx)(n.strong,{children:"almac\xe9n"})," de ",(0,a.jsx)(n.strong,{children:"Redux"}),". Aunque ",(0,a.jsx)(n.strong,{children:"connect"})," cumpl\xeda su prop\xf3sito, a menudo resultaba en un c\xf3digo m\xe1s complicado de mantener. Con la adopci\xf3n de ",(0,a.jsx)(n.strong,{children:"hooks"}),", como el ",(0,a.jsx)(n.strong,{children:"useDispatch"})," en React Redux, se ha vuelto mucho m\xe1s sencillo lograr la misma funcionalidad de una manera m\xe1s eficiente y concisa."]})}),"\n",(0,a.jsx)(n.h3,{id:"useselector",children:"useSelector"}),"\n",(0,a.jsxs)(n.p,{children:["En el contexto de ",(0,a.jsx)(n.strong,{children:"Redux"}),", ",(0,a.jsx)(n.strong,{children:"useSelector"})," es una herramienta crucial que permite a los componentes de React acceder al ",(0,a.jsx)(n.strong,{children:"estado global"})," almacenado en el ",(0,a.jsx)(n.strong,{children:"store"})," de ",(0,a.jsx)(n.strong,{children:"Redux"}),". El hook ",(0,a.jsx)(n.strong,{children:"useSelector"})," es una funci\xf3n que recibe el ",(0,a.jsx)(n.strong,{children:"estado"})," y ",(0,a.jsx)(n.em,{children:"devuelve un valor derivado"})," del ",(0,a.jsx)(n.strong,{children:"estado"}),". Esto facilita la obtenci\xf3n de datos espec\xedficos de la aplicaci\xf3n y su renderizaci\xf3n en el componente."]}),"\n",(0,a.jsxs)(n.p,{children:["Para nuestro ejemplo, el ",(0,a.jsx)(n.strong,{children:"hook"})," ",(0,a.jsx)(n.strong,{children:"useSelector"})," va permitir que la variable ",(0,a.jsx)(n.strong,{children:"estudiantes"})," contenga una referencia al estado, en especifico el arreglo de ",(0,a.jsx)(n.strong,{children:"estudiantes"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const estudiantes = useSelector(state => state.estudiantes)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"usedispatch",children:"useDispatch"}),"\n",(0,a.jsxs)(n.p,{children:["El ",(0,a.jsx)(n.strong,{children:"useDispatch"})," en ",(0,a.jsx)(n.strong,{children:"Redux"})," simplifica el flujo de acciones al permitirle a los desarrolladores ",(0,a.jsx)(n.strong,{children:"enviar acciones directamente desde el componente"}),", sin necesidad de crear funciones adicionales o componentes de orden superior. Esto resulta en un c\xf3digo m\xe1s limpio y legible, adem\xe1s de reducir la complejidad general de la aplicaci\xf3n."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const dispatch = useDispatch();\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Para nuestro ejemplo vamos a crear tres componentes funcionales : ",(0,a.jsx)(n.strong,{children:"FormEstudiante"}),",  ",(0,a.jsx)(n.strong,{children:"ListEstudiantes"})," y ",(0,a.jsx)(n.strong,{children:"AppEstudiantes"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["El componente funcional ",(0,a.jsx)(n.strong,{children:"FormEstudiante"})," hace uso del ",(0,a.jsx)(n.strong,{children:"hook"})," ",(0,a.jsx)(n.strong,{children:"useSelector"}),", ",(0,a.jsx)(n.strong,{children:"useDispatch"})," y ",(0,a.jsx)(n.strong,{children:"useState"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["El ",(0,a.jsx)(n.strong,{children:"hook"})," ",(0,a.jsx)(n.strong,{children:"useSelector"})," le permite elegir un campo del ",(0,a.jsx)(n.strong,{children:"estado"})," de la aplicaci\xf3n, en este caso, hace referencia al arreglo de estudiantes definido en ",(0,a.jsx)(n.strong,{children:"initialState"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["El ",(0,a.jsx)(n.strong,{children:"hook"})," ",(0,a.jsx)(n.strong,{children:"useState"})," le permite crear una ",(0,a.jsx)(n.strong,{children:"variable de estado"})," nombrada ",(0,a.jsx)(n.strong,{children:"nombre"})," con su funci\xf3n ",(0,a.jsx)(n.strong,{children:"set"})," ",(0,a.jsx)(n.strong,{children:"setNombre"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["El ",(0,a.jsx)(n.strong,{children:"hook"})," ",(0,a.jsx)(n.strong,{children:"useDispatch"})," le permite acceder a las ",(0,a.jsx)(n.strong,{children:"funciones creadoras de acciones"}),", en este caso, podr\xe1 acceder a la funci\xf3n ",(0,a.jsx)(n.strong,{children:"addEstudiante"})," encargada de retornar el tipo de acci\xf3n ",(0,a.jsx)(n.strong,{children:"ADD_ESTUDIANTE"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["El componente funcional ",(0,a.jsx)(n.strong,{children:"FormEstudiante"})," defini\xf3 e implement\xf3 dos funciones:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.strong,{children:"handleChange"})," responde al evento ",(0,a.jsx)(n.strong,{children:"onChange"})," del campo de texto que contendr\xe1 el nombre del estudiante. Su objetivo es actualizar el valor de la ",(0,a.jsx)(n.strong,{children:"variable de estado"})," ",(0,a.jsx)(n.strong,{children:"nombre"})," haciendo uso de la funci\xf3n ",(0,a.jsx)(n.strong,{children:"setNombre"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["La funci\xf3n ",(0,a.jsx)(n.strong,{children:"handleClick"})," responde al evento ",(0,a.jsx)(n.strong,{children:"onClick"})," del bot\xf3n que adiciona un estudiante al arreglo de estudiantes. Su objetivo es llamar al ",(0,a.jsx)(n.strong,{children:"dispatch"})," con la ",(0,a.jsx)(n.strong,{children:"funci\xf3n creadora de acciones"})," ",(0,a.jsx)(n.strong,{children:"addEstudiante"}),". La funci\xf3n ",(0,a.jsx)(n.strong,{children:"addEstudiante"})," recibe un par\xe1metro con los datos del estudiante que se almacenar\xe1n. Finalmente, la funci\xf3n ",(0,a.jsx)(n.strong,{children:"handleClick"})," refresca el valor de la ",(0,a.jsx)(n.strong,{children:"variable de estado"})," ",(0,a.jsx)(n.strong,{children:"nombre"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["El componente funcional ",(0,a.jsx)(n.strong,{children:"FormEstudiante"})," retorna :"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Un parr\xe1fo que contiene el total de estudiantes que han sido adicionados."}),"\n",(0,a.jsxs)(n.li,{children:["Un campo de texto que contendr\xe1 el nombre del estudiante y que invocar\xe1 la funci\xf3n ",(0,a.jsx)(n.strong,{children:"handleChange"})," mediante el evento ",(0,a.jsx)(n.strong,{children:"onChange"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Un bot\xf3n que permitir\xe1 ejecutar el ",(0,a.jsx)(n.strong,{children:"dispatch"})," a trav\xe9s del evento ",(0,a.jsx)(n.strong,{children:"onClick"})," el cu\xe1l invoca la funci\xf3n ",(0,a.jsx)(n.strong,{children:"handleClick"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/FormEstudiante.jsx"',children:"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useState } from 'react'\nimport { addEstudiante } from './acciones'\n\nexport const FormEstudiante = () => {\n\n    const estudiantes = useSelector(state => state.estudiantes)\n    const [nombre, setNombre] = useState('');\n\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        setNombre(event.target.value)\n    }\n\n    const handleClick = (event) => {\n        dispatch(addEstudiante({\n            name: nombre\n        }))\n        setNombre('');\n    }\n\n    return (\n        <>\n            <p>Hay {estudiantes.length} estudiantes registrados</p>\n            <div>\n                <label htmlFor=\"nombre\">Nombre : </label>\n                <input type=\"text\" id=\"nombre\" name=\"nombre\" value={nombre} onChange={handleChange} />\n                <button onClick={handleClick}>Adicionar</button>\n            </div>\n            \n        </>\n    )\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["El componente funcional ",(0,a.jsx)(n.strong,{children:"ListEstudiantes"})," hace uso del ",(0,a.jsx)(n.strong,{children:"hook"})," ",(0,a.jsx)(n.strong,{children:"useSelector"})," para acceder al ",(0,a.jsx)(n.strong,{children:"estado"})," de la aplicaci\xf3n, en especial al arreglo de estudiantes definido en ",(0,a.jsx)(n.strong,{children:"initialState"}),". Este componente retorna una lista sin un orden espec\xedfico donde cada elemento de la lista representar\xe1 el nombre de cada estudiante."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/ListEstudiantes.jsx"',children:"import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const ListEstudiantes = () => {\n\n    const estudiantes = useSelector(state => state.estudiantes)\n\n    return (\n        <>\n            <p>Los estudiantes registrados son : </p>\n            <ul>\n                {\n                    estudiantes.map(item => {\n                        return <li key={item.name} value={item.name}>{item.name}</li>\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Es decir que hasta el momento tanto el componente funcional ",(0,a.jsx)(n.strong,{children:"FormEstudiante"})," como el componente funcional ",(0,a.jsx)(n.strong,{children:"ListEstudiantes"})," hacen referencia al mismo ",(0,a.jsx)(n.strong,{children:"estado"})," de la aplicaci\xf3n. En este caso, si se adiciona un estudiante en el componente funcional ",(0,a.jsx)(n.strong,{children:"FormEstudiante"}),", no solo se actualizar\xe1 el componente ",(0,a.jsx)(n.strong,{children:"FormEstudiante"})," sino tambi\xe9n el componente ",(0,a.jsx)(n.strong,{children:"ListEstudiantes"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Finalmente encapsulamos ambos componentes funcionales : ",(0,a.jsx)(n.strong,{children:"FormEstudiante"})," y ",(0,a.jsx)(n.strong,{children:"ListEstudiante"})," en ",(0,a.jsx)(n.strong,{children:"AppEstudiante"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="/src/AppEstudiante.jsx"',children:"import React from 'react'\nimport { FormEstudiante } from './FormEstudiante'\nimport { ListEstudiantes } from './ListEstudiantes'\n\nexport const AppEstudiante = () => {\n    return (\n        <>\n            <FormEstudiante />\n            <ListEstudiantes />\n        </>\n    )\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(6540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);