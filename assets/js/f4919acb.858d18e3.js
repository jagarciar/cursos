"use strict";(self.webpackChunkcursos=self.webpackChunkcursos||[]).push([[4362],{2105:e=>{e.exports=JSON.parse('{"tag":{"label":"Componente funcional","permalink":"/cursos/docs/tags/about-functional-component","description":"Tutoriales donde se menciona la palabra componente funcional","allTagsPath":"/cursos/docs/tags","count":7,"items":[{"id":"reactjs/hooks/intro-hooks","title":"1. Introducci\xf3n","description":"En React los hooks permiten administrar el estado y otras funciones sin tener que escribir una clase.","permalink":"/cursos/docs/reactjs/hooks/intro-hooks"},{"id":"reactjs/hooks/useEffect","title":"3. useEffect","description":"useEffect es un hook en ReactJS que permite ejecutar una funci\xf3n despu\xe9s del renderizado de un componente","permalink":"/cursos/docs/reactjs/hooks/useEffect"},{"id":"reactjs/proyecto/componentes-funcional","title":"4. Componentes funcionales","description":"Creaci\xf3n de un componente funcional.","permalink":"/cursos/docs/reactjs/proyecto/componentes-funcional"},{"id":"reactjs/hooks/useRef","title":"4. useRef","description":"useRef es un hook en ReactJS que permite obtener una referencia a un elemento del DOM","permalink":"/cursos/docs/reactjs/hooks/useRef"},{"id":"reactjs/hooks/useMemo","title":"5. useMemo","description":"useMemo es un hook en ReactJS que permite memorizar el valor de una variable de estado","permalink":"/cursos/docs/reactjs/hooks/useMemo"},{"id":"reactjs/hooks/useCallback","title":"6. useCallback","description":"El hook useCallback permite memorizar una funci\xf3n en un contexto ReactJS","permalink":"/cursos/docs/reactjs/hooks/useCallback"},{"id":"reactjs/hooks/useReducer","title":"7. useReducer","description":"useReducer es un hook en ReactJS que permite gestionar el estado de un componente","permalink":"/cursos/docs/reactjs/hooks/useReducer"}],"unlisted":false}}')}}]);