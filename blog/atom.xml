<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jagarciar.github.io/cursos/blog</id>
    <title>JEO Blog</title>
    <updated>2025-05-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jagarciar.github.io/cursos/blog"/>
    <subtitle>JEO Blog</subtitle>
    <icon>https://jagarciar.github.io/cursos/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[API First]]></title>
        <id>https://jagarciar.github.io/cursos/blog/api-first</id>
        <link href="https://jagarciar.github.io/cursos/blog/api-first"/>
        <updated>2025-05-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[API First es una estrategía que prioriza la definición e implementación de API's antes del diseño de UI.]]></summary>
        <content type="html"><![CDATA[<p><strong>API First</strong> es una <strong>estrategia</strong> de <strong>desarrollo de aplicaciones</strong> en la que el <strong>diseño</strong> y <strong>desarrollo</strong> de las <strong>API</strong> tienen prioridad sobre otros componentes de software, colocándolos a la vanguardia del proceso de desarrollo desde el principio.</p>
<p>El concepto de <strong>API First</strong> implica que todos los componentes de una aplicación, incluyendo el <strong>frontend</strong>, el <strong>backend</strong>, y cualquier integración con sistemas externos, deben estar alineados y comunicarse a través de APIs bien definidas. Esto garantiza que la API sea un contrato estable y confiable que otros desarrolladores, tanto internos como externos, pueden utilizar sin preocuparse por cambios inesperados.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Para <strong>API First</strong>, las <strong>API</strong> son el núcleo alrededor del cual se construye todo el ecosistema de software. Esto contrasta con enfoques más tradicionales donde la API puede ser desarrollada como una necesidad secundaria o incluso omitida por completo en las primeras etapas de un proyecto.</p></div></div>
<p>Uno de los principales beneficios de <strong>API First</strong> es la mejora en la colaboración entre los diferentes equipos de desarrollo. Dado que las <strong>API</strong> están definidas desde el principio, los equipos de <strong>frontend</strong>, <strong>backend</strong> y otros servicios pueden trabajar en paralelo sin tener que esperar a que una parte de la aplicación esté completa. Esto no solo acelera el desarrollo, sino que también reduce los cuellos de botella y los malentendidos, ya que todos trabajan con el mismo contrato API.</p>
<p>Un enfoque <strong>API First</strong> permite construir sistemas que son <strong>modulares</strong> y <strong>escalables</strong>. Como las APIs son independientes del resto del sistema, es posible realizar cambios en una parte del sistema sin afectar a otras. Esto es especialmente útil en <strong>arquitecturas de microservicios</strong>, donde diferentes servicios pueden ser desarrollados, desplegados y escalados de manera independiente.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Una <strong>API</strong> no es solo una herramienta técnica; es un producto que será utilizado por otros desarrolladores. Por lo tanto, es fundamental diseñar la <strong>API</strong> teniendo en cuenta la <strong>experiencia del usuario</strong> (en este caso, el desarrollador). Esto implica pensar en la <strong>usabilidad</strong>, la <strong>consistencia</strong>, y la <strong>claridad de la documentación</strong>, así como en proporcionar ejemplos y guías claras sobre cómo utilizar la <strong>API</strong>.</p></div></div>]]></content>
        <author>
            <name>Jeyson Andrés García Rodríguez</name>
            <uri>https://github.com/jagarciar</uri>
        </author>
        <category label="API REST" term="API REST"/>
        <category label="API First" term="API First"/>
        <category label="Patrones de software" term="Patrones de software"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Principio de responsabilidad única]]></title>
        <id>https://jagarciar.github.io/cursos/blog/srp</id>
        <link href="https://jagarciar.github.io/cursos/blog/srp"/>
        <updated>2025-05-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[El principio de responsabilidad única es uno de los cinco principios de SOLID.]]></summary>
        <content type="html"><![CDATA[<p>El <strong>Principio de responsabilidad única</strong> es el primero de los cinco que componen <strong>SOLID</strong>.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p><strong>SOLID</strong> hace referencia a cinco principios que definen un conjunto de <strong>reglas</strong> y <strong>mejores prácticas</strong> a seguir durante el diseño y desarrollo de software</p></div></div>
<p>Este principio establece que un módulo o clase debe de tener una sola responsabilidad, cada módulo de software debe tener responsabilidad sobre una sola parte de la funcionalidad proporcionada por la aplicación.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>El <strong>Principio de Responsabilidad Única</strong> nos dice que un módulo tiene una única razón para cambiar</p></div></div>
<p>Las ventajas de incluir el <strong>Principio de responsabilidad única</strong> en nuestros proyectos son:</p>
<ol>
<li>Facilita la comprensión y el mantenimiento del código porque cada módulo o clase tiene un propósito bien definido.</li>
<li>Aumenta la reutilización del código porque los módulos pueden reutilizarse en otras partes de la aplicación donde encajen.</li>
<li>En otras palabras, cada módulo o componente debe hacer una sola cosa y hacerla bien. Esto ayuda a mantener el software limpio y fácil de mantener, ya que es más fácil comprender qué está pasando si todo está dividido en pequeñas partes con funciones claramente definidas.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reactjs">ReactJS<a href="https://jagarciar.github.io/cursos/blog/srp#reactjs" class="hash-link" aria-label="Direct link to ReactJS" title="Direct link to ReactJS">​</a></h2>
<p>Si estamos construyendo una aplicación en <strong>ReactJS</strong> debemos tener en cuenta los siguientes para incluir el <strong>Principio de responsabilidad única</strong>:</p>
<ul>
<li>
<p>Un componente que renderiza un formulario no debería ser también responsable de manejar el envío del mismo. Son dos responsabilidades diferentes y, por lo tanto, violaría la SRP. Un componente solo debe tener un trabajo o responsabilidad.</p>
</li>
<li>
<p>Una forma de aumentar el nivel de abstracción cuando se piensa en los componentes individuales de React es si son de <strong>presentación</strong> o de <strong>contenedor</strong>. Los <strong>componentes de presentación</strong> tienden a no preocuparse demasiado por la lógica de la aplicación, se centran en el aspecto de las cosas (<strong>HTML/CSS</strong>). Los <strong>componentes contenedores</strong>, sin embargo, se centran principalmente en proporcionar datos y comportamiento a los componentes de presentación (hijos) que se encuentran por debajo en la jerarquía.</p>
</li>
<li>
<p>El SRP también puede aplicarse a nivel de props individuales y variables de estado, cada prop o variable de estado debe ser utilizada sólo para su propósito; si necesita ser cambiada por cualquier otra razón, debe ser extraída en su propia prop o variable de estado.</p>
</li>
</ul>]]></content>
        <author>
            <name>Jeyson Andrés García Rodríguez</name>
            <uri>https://github.com/jagarciar</uri>
        </author>
        <category label="Principio de responsabilidad única" term="Principio de responsabilidad única"/>
        <category label="SOLID" term="SOLID"/>
        <category label="Patrones de software" term="Patrones de software"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Composición de reductores]]></title>
        <id>https://jagarciar.github.io/cursos/blog/composicion-reductores</id>
        <link href="https://jagarciar.github.io/cursos/blog/composicion-reductores"/>
        <updated>2025-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cuando se desea dividir la lógica para el manejo de datos en un aplicativo ReactJS que hace uso de Redux, se debe usar la composición de reductores en lugar de muchos stores.]]></summary>
        <content type="html"><![CDATA[<p>Recordemos que <a href="https://jagarciar.github.io/cursos/docs/programacion/reactjs/frameworks/redux.md"><strong>Redux</strong></a> esta compuesto de cuatro artefactos principales : las <strong>vistas</strong>, las <strong>acciones</strong>, los <strong>reductores</strong> y el <strong>almacén</strong>. Las <strong>vistas</strong>  ejecutan las <strong>acciones</strong> a través de los <strong>reductores</strong>. Los <strong>reductores</strong> crean, consultan, actualizan o eliminan datos definidos en el <strong>modelo</strong> y gestionados por el <strong>almacén</strong>.</p>
<p>Según la necesidad del negocio, una aplicación puede tener más de una entidad en el modelo de datos. Por ejemplo, si nuestra aplicación trata de un sistema autogestionable de productos adquiridos por un cliente en una compañía, por lo menos, las entidades cliente y productos deberían existir en el modelo de datos.</p>
<p>Teniendo en cuenta el ejemplo anterior, podriamos pensar en dos modelos : <strong>initialCustomerState</strong> e <strong>initialProductsState</strong>.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> initialCustomerState </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Jeyson"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">age</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">33</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">email</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"jeogarod@gmail.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> initialProductsState </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Salt"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">$300</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Cada modelo de datos podría y debería estar asociado a un reductor. Por ejemplo, <strong>clienteReducer</strong> respondería a los tipos de acción asociados al modelo del cliente y <strong>productosReducer</strong> respondería a los tipos de acción asociados al modelo de los productos.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">clienteReducer</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">state </span><span class="token parameter operator" style="color:#393A34">=</span><span class="token parameter"> initialCustomerState</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">action</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"REGISTER_CUSTOMER"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> action</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">payload</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword module" style="color:#00009f">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> state</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">productosReducer</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">state </span><span class="token parameter operator" style="color:#393A34">=</span><span class="token parameter"> initialProductsState</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> action</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">action</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">type</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ADD_PRODUCTO"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">productos</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> action</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">payload</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword module" style="color:#00009f">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> state</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Cada reductor implementado puede ser combinado creando un único reductor. Esto se logra a través de <strong>combineReducers</strong>.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> createStore</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> combineReducers </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> reducer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">combineReducers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">cliente</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> clienteReducer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">productos</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> productosReducer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Finalmente durante la creación del <strong>almacén</strong> se envía como argumento a la función el resultado de la combinación de los reductores.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> store </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createStore</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">reducer</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Esto va permitir que tengamos organizado nuestro código con varios reductores y un único almacén.</p>]]></content>
        <author>
            <name>Jeyson Andrés García Rodríguez</name>
            <uri>https://github.com/jagarciar</uri>
        </author>
        <category label="React" term="React"/>
        <category label="React JS" term="React JS"/>
        <category label="createRoot" term="createRoot"/>
        <category label="NPM" term="NPM"/>
        <category label="Vite" term="Vite"/>
        <category label="Redux" term="Redux"/>
        <category label="Estado" term="Estado"/>
        <category label="flux" term="flux"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flux]]></title>
        <id>https://jagarciar.github.io/cursos/blog/flux</id>
        <link href="https://jagarciar.github.io/cursos/blog/flux"/>
        <updated>2025-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Flux es un patrón de arquitectura de datos para aplicaciones web que permiten gestionar el estado.]]></summary>
        <content type="html"><![CDATA[<p><strong>Flux</strong> es una <strong>arquitectura</strong> que asegura que los <strong>datos</strong> en una <strong>aplicación web</strong> fluyan en una sola dirección, desde el inicio de un cambio hasta que ese cambio se refleja en la <strong>interfaz de usuario</strong>.</p>
<p><strong>Flux</strong> propone una arquitectura en la que el flujo de datos es unidireccional. Los <strong>datos</strong> viajan desde la <strong>vista</strong> por medio de <strong>acciones</strong> y llegan a un <strong>Store</strong> desde el cual se actualizará la vista de nuevo.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>La función principal de <strong>Flux</strong> es gestionar el <strong>estado</strong> de una aplicación, definiendo un <strong>flujo unidireccional de datos</strong>. Esto significa que los datos sólo pueden fluir en una dirección, desde los componentes hacia el estado de la aplicación y luego hacia los componentes nuevamente.</p></div></div>
<p><img decoding="async" loading="lazy" alt="Arquitectura Flux" src="https://jagarciar.github.io/cursos/assets/images/flux-881c33dd0714412bc48de4ed595e7f12.png" width="570" height="207" class="img_ev3q"></p>
<p><strong>Flux</strong> se compone de diferentes <strong>componentes</strong>, incluyendo el <strong>dispatcher</strong>, las <strong>acciones</strong>, los <strong>almacenes</strong> y las <strong>vistas</strong>. El <strong>dispatcher</strong> es el encargado de recibir y distribuir las <strong>acciones</strong> a los diferentes <strong>almacenes</strong>. Las <strong>acciones</strong> son objetos que contienen información sobre los <strong>eventos</strong> que ocurren en la aplicación. Los <strong>almacenes</strong> son los encargados de contener y gestionar el <strong>estado</strong> de la aplicación, y las <strong>vistas</strong> muestran la información al usuario y envían las <strong>acciones</strong> al <strong>dispatcher</strong>.</p>
<p>La principal ventaja de <strong>Flux</strong> es su capacidad para mantener un <strong>flujo de datos unidireccional</strong>, lo que facilita la comprensión y depuración del código. Además, separa de manera clara la lógica de presentación de la lógica de negocio, lo que facilita el mantenimiento y escalabilidad del código. También permite tener un control más preciso sobre cómo se actualiza y cambia el estado de la aplicación, evitando problemas de sincronización y conflicto de datos.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Este patrón es comúnmente utilizado en aplicaciones desarrolladas con <a href="https://jagarciar.github.io/cursos/docs/programacion/reactjs/intro.md"><strong>React</strong></a>, un popular framework de JavaScript para la construcción de interfaces de usuario interactivas. <strong>Flux</strong> permite manejar de manera efectiva las actualizaciones y cambios en la interfaz de usuario, manteniendo el estado de la aplicación consistente y predecible.</p></div></div>]]></content>
        <author>
            <name>Jeyson Andrés García Rodríguez</name>
            <uri>https://github.com/jagarciar</uri>
        </author>
        <category label="flux" term="flux"/>
        <category label="Patrones de software" term="Patrones de software"/>
    </entry>
</feed>